{
    "benchmark_policy_performance.Suite.time_policy_performance": {
        "code": "class Suite:\n    def time_policy_performance(self, param):\n        print(f\"param: {param[0]}\")\n        policy_class, policy_kwargs, is_terminating, update_params = param\n        policy = policy_class(**policy_kwargs)\n    \n        with torch.no_grad():\n            policy.forward(inputs)",
        "min_run_count": 2,
        "name": "benchmark_policy_performance.Suite.time_policy_performance",
        "number": 0,
        "param_names": [
            "param1",
            "param2",
            "param3",
            "param4",
            "param5"
        ],
        "params": [
            [
                "<class 'torchcontrol.policies.impedance.JointImpedanceControl'>",
                "{'joint_pos_current': tensor([0.0492, 0.8358, 0.3921, 0.7923, 0.2907, 0.4482, 0.4683]), 'Kp': tensor([[0.4091, 0.3197, 0.7821, 0.1248, 0.2313, 0.4346, 0.8125],\n        [0.7133, 0.1769, 0.9249, 0.5033, 0.3003, 0.1878, 0.6444],\n        [0.5048, 0.4608, 0.1499, 0.0315, 0.1829, 0.8294, 0.6352],\n        [0.3277, 0.1041, 0.1403, 0.7604, 0.2082, 0.0597, 0.2345],\n        [0.1661, 0.2952, 0.0027, 0.2634, 0.4023, 0.3787, 0.2348],\n        [0.0714, 0.3800, 0.4440, 0.6978, 0.6561, 0.4257, 0.8784],\n        [0.5987, 0.2944, 0.0925, 0.5561, 0.6512, 0.7205, 0.3202]]), 'Kd': tensor([[0.4710, 0.1362, 0.3888, 0.3463, 0.6567, 0.1592, 0.8545],\n        [0.0605, 0.5008, 0.7950, 0.9184, 0.9575, 0.9026, 0.5697],\n        [0.3395, 0.4990, 0.1675, 0.7599, 0.6531, 0.8564, 0.2134],\n        [0.3409, 0.2167, 0.2933, 0.0914, 0.4195, 0.8883, 0.9073],\n        [0.5131, 0.6721, 0.8363, 0.5493, 0.0042, 0.7288, 0.5191],\n        [0.8295, 0.6277, 0.5438, 0.9443, 0.6177, 0.1148, 0.9407],\n        [0.3685, 0.0584, 0.4166, 0.3530, 0.8796, 0.9661, 0.1478]]), 'robot_model': RobotModelPinocchio()}",
                "False",
                "{'joint_pos_desired': tensor([0.4305, 0.6642, 0.1627, 0.8004, 0.1155, 0.5242, 0.9685])}"
            ],
            [
                "<class 'torchcontrol.policies.impedance.CartesianImpedanceControl'>",
                "{'joint_pos_current': tensor([0.3366, 0.0551, 0.2847, 0.0279, 0.4955, 0.5389, 0.1185]), 'Kp': tensor([[0.7987, 0.9945, 0.5021, 0.3025, 0.9820, 0.4588],\n        [0.5917, 0.8500, 0.4797, 0.0954, 0.6332, 0.0745],\n        [0.9390, 0.8838, 0.4018, 0.8751, 0.3609, 0.5827],\n        [0.5008, 0.3848, 0.2522, 0.6502, 0.3266, 0.1745],\n        [0.7992, 0.9523, 0.7282, 0.1945, 0.3804, 0.5748],\n        [0.1413, 0.9906, 0.4644, 0.8437, 0.4786, 0.5133]]), 'Kd': tensor([[0.8248, 0.6203, 0.2512, 0.5587, 0.7077, 0.2884],\n        [0.2743, 0.2702, 0.5807, 0.3157, 0.4314, 0.1246],\n        [0.3009, 0.0019, 0.8034, 0.1744, 0.2316, 0.9071],\n        [0.6102, 0.4919, 0.3660, 0.6590, 0.9855, 0.6857],\n        [0.7248, 0.8726, 0.0385, 0.4281, 0.3936, 0.1544],\n        [0.5140, 0.1840, 0.6979, 0.8638, 0.2212, 0.6545]]), 'robot_model': RobotModelPinocchio()}",
                "False",
                "{'ee_pos_desired': tensor([0.9584, 0.9292, 0.6021])}"
            ],
            [
                "<class 'torchcontrol.policies.trajectory.JointTrajectoryExecutor'>",
                "{'joint_pos_trajectory': [tensor([6.3166e-01, 1.5205e-04, 9.4499e-02, 7.5742e-01, 2.5101e-01, 4.7414e-01,\n        9.3250e-01]), tensor([0.5408, 0.8747, 0.0822, 0.9388, 0.8841, 0.2060, 0.0037]), tensor([0.4957, 0.7944, 0.1509, 0.1211, 0.0350, 0.5698, 0.1744]), tensor([0.2699, 0.8901, 0.1518, 0.4761, 0.7561, 0.3122, 0.1608]), tensor([0.0660, 0.6187, 0.1203, 0.0749, 0.8078, 0.9920, 0.0034]), tensor([0.2420, 0.1337, 0.7655, 0.2909, 0.2893, 0.0595, 0.5424]), tensor([0.4608, 0.9001, 0.9483, 0.5157, 0.3659, 0.2464, 0.4968]), tensor([0.4462, 0.9089, 0.1683, 0.7337, 0.4409, 0.4416, 0.9821]), tensor([0.6385, 0.5250, 0.3974, 0.7834, 0.8148, 0.1365, 0.3488]), tensor([0.5385, 0.0663, 0.4118, 0.1308, 0.6163, 0.2260, 0.4499]), tensor([0.6717, 0.7801, 0.5308, 0.3211, 0.8365, 0.4018, 0.1691]), tensor([0.0829, 0.4174, 0.0944, 0.7881, 0.3800, 0.5057, 0.7644]), tensor([0.3627, 0.7228, 0.9968, 0.7801, 0.1403, 0.1376, 0.9145]), tensor([0.2461, 0.9929, 0.2474, 0.6605, 0.2970, 0.5756, 0.0201]), tensor([0.8820, 0.6436, 0.7894, 0.0879, 0.6688, 0.9785, 0.7222]), tensor([0.4880, 0.4670, 0.6309, 0.6565, 0.5668, 0.7890, 0.3009]), tensor([0.3155, 0.6004, 0.1868, 0.2936, 0.7277, 0.8809, 0.2225]), tensor([0.9727, 0.7595, 0.3781, 0.8334, 0.1439, 0.7148, 0.9824]), tensor([0.7935, 0.9409, 0.7606, 0.1460, 0.0983, 0.8478, 0.0202]), tensor([0.5775, 0.6219, 0.6167, 0.4915, 0.1309, 0.6677, 0.2666]), tensor([0.7203, 0.7570, 0.6667, 0.2994, 0.2947, 0.3694, 0.5362]), tensor([0.6039, 0.3505, 0.0741, 0.4142, 0.3017, 0.2464, 0.5737]), tensor([0.7477, 0.9072, 0.6400, 0.2320, 0.8175, 0.3222, 0.2659]), tensor([0.0167, 0.9040, 0.7798, 0.0301, 0.8187, 0.1599, 0.4815]), tensor([0.9677, 0.3085, 0.5449, 0.0895, 0.5489, 0.2078, 0.6427]), tensor([0.2472, 0.4509, 0.1263, 0.7185, 0.2897, 0.7604, 0.9020]), tensor([0.2910, 0.3376, 0.8744, 0.8656, 0.3581, 0.2230, 0.8426]), tensor([0.9771, 0.1433, 0.6179, 0.3240, 0.7624, 0.9343, 0.5049]), tensor([0.4609, 0.9133, 0.5004, 0.2540, 0.7561, 0.7231, 0.2209]), tensor([0.4865, 0.5894, 0.4839, 0.9696, 0.6075, 0.3229, 0.5412]), tensor([0.6128, 0.6347, 0.4557, 0.6642, 0.6113, 0.3417, 0.1286]), tensor([0.8712, 0.1962, 0.4816, 0.9845, 0.3890, 0.0111, 0.7675]), tensor([0.2907, 0.3696, 0.2369, 0.0256, 0.9668, 0.9853, 0.8068]), tensor([0.1080, 0.0324, 0.1782, 0.5768, 0.5307, 0.1260, 0.5332]), tensor([0.6732, 0.3975, 0.9520, 0.1769, 0.4022, 0.7322, 0.9617]), tensor([0.9194, 0.1302, 0.0570, 0.0649, 0.3139, 0.9379, 0.4866]), tensor([0.8421, 0.1348, 0.9382, 0.4905, 0.2630, 0.9375, 0.2058]), tensor([0.5521, 0.8481, 0.5731, 0.4758, 0.7025, 0.2607, 0.4315]), tensor([0.1707, 0.3369, 0.7725, 0.9082, 0.6246, 0.0042, 0.6656]), tensor([0.2328, 0.8487, 0.4335, 0.2030, 0.8937, 0.8101, 0.9543]), tensor([0.6416, 0.3715, 0.5111, 0.8248, 0.2741, 0.6293, 0.2519]), tensor([0.6774, 0.4762, 0.0023, 0.8880, 0.3402, 0.6178, 0.9364]), tensor([0.1212, 0.1639, 0.1970, 0.5269, 0.1974, 0.6327, 0.6800]), tensor([0.2198, 0.2327, 0.2852, 0.9024, 0.6653, 0.8046, 0.5992]), tensor([0.2521, 0.1091, 0.2688, 0.4921, 0.2983, 0.4158, 0.5709]), tensor([0.5168, 0.9167, 0.2752, 0.2921, 0.8736, 0.3474, 0.7637]), tensor([0.1869, 0.3965, 0.0745, 0.8021, 0.0111, 0.9812, 0.5812]), tensor([0.1731, 0.6046, 0.2753, 0.9097, 0.7335, 0.2173, 0.4231]), tensor([0.9442, 0.9164, 0.7033, 0.5538, 0.7833, 0.2412, 0.7463]), tensor([0.7419, 0.3334, 0.9490, 0.0969, 0.9520, 0.4558, 0.8976]), tensor([0.4154, 0.6702, 0.5698, 0.2384, 0.5818, 0.6171, 0.2261]), tensor([0.8594, 0.5569, 0.3642, 0.2708, 0.3282, 0.0368, 0.7255]), tensor([0.3797, 0.0259, 0.2920, 0.9560, 0.3199, 0.6283, 0.3846]), tensor([0.3247, 0.9152, 0.7447, 0.5795, 0.3412, 0.0481, 0.3997]), tensor([0.5546, 0.7411, 0.4035, 0.8437, 0.5881, 0.0502, 0.1755]), tensor([0.3626, 0.6798, 0.0197, 0.6948, 0.3708, 0.9818, 0.6789]), tensor([0.8297, 0.0775, 0.6721, 0.1689, 0.2234, 0.4693, 0.8554]), tensor([0.7210, 0.3261, 0.9685, 0.3540, 0.9489, 0.7170, 0.2589]), tensor([0.0444, 0.6328, 0.4594, 0.9376, 0.3218, 0.3578, 0.5369]), tensor([0.3035, 0.8156, 0.5025, 0.9527, 0.0968, 0.4742, 0.9720])], 'joint_vel_trajectory': [tensor([0.2666, 0.5859, 0.2377, 0.9685, 0.4290, 0.8348, 0.1982]), tensor([0.4972, 0.8708, 0.1698, 0.8364, 0.5074, 0.0772, 0.7137]), tensor([0.1035, 0.1903, 0.5903, 0.1885, 0.8856, 0.4949, 0.9697]), tensor([0.9700, 0.8201, 0.8927, 0.8163, 0.4781, 0.5590, 0.6460]), tensor([0.1246, 0.3844, 0.6976, 0.7809, 0.9607, 0.9805, 0.2287]), tensor([0.3263, 0.8260, 0.1249, 0.6788, 0.2594, 0.8569, 0.9952]), tensor([0.9901, 0.0361, 0.7197, 0.1401, 0.1205, 0.3459, 0.5412]), tensor([0.3295, 0.0871, 0.3336, 0.1926, 0.5496, 0.7624, 0.0908]), tensor([0.8389, 0.2765, 0.0914, 0.4614, 0.0699, 0.9843, 0.7375]), tensor([0.4042, 0.8118, 0.1295, 0.9805, 0.5100, 0.3855, 0.2490]), tensor([0.7690, 0.0209, 0.3316, 0.5019, 0.5804, 0.1723, 0.5109]), tensor([0.5560, 0.7463, 0.1250, 0.1857, 0.2024, 0.7457, 0.0417]), tensor([0.6042, 0.4283, 0.6847, 0.5160, 0.9015, 0.4385, 0.5907]), tensor([0.1650, 0.5282, 0.5845, 0.3894, 0.7429, 0.9726, 0.4274]), tensor([0.8000, 0.4448, 0.6482, 0.3269, 0.1948, 0.5189, 0.5090]), tensor([0.2767, 0.0171, 0.3260, 0.4390, 0.6487, 0.8751, 0.2699]), tensor([0.7276, 0.0727, 0.0173, 0.6964, 0.5083, 0.4817, 0.6561]), tensor([0.1199, 0.3791, 0.9912, 0.2188, 0.9775, 0.2146, 0.3713]), tensor([0.4257, 0.5693, 0.0935, 0.2741, 0.3267, 0.4627, 0.6875]), tensor([0.2719, 0.1812, 0.1058, 0.6800, 0.5051, 0.1673, 0.0117]), tensor([0.1997, 0.2070, 0.4754, 0.0318, 0.3652, 0.4785, 0.4788]), tensor([0.5392, 0.1235, 0.9391, 0.2643, 0.7843, 0.1210, 0.4555]), tensor([0.5036, 0.7456, 0.1794, 0.7794, 0.7365, 0.0458, 0.7991]), tensor([0.8910, 0.9260, 0.0101, 0.9098, 0.5168, 0.8280, 0.3655]), tensor([0.2470, 0.3487, 0.3859, 0.1373, 0.1583, 0.5112, 0.7423]), tensor([0.9098, 0.0872, 0.9718, 0.5589, 0.8809, 0.9720, 0.3705]), tensor([0.6281, 0.6284, 0.4772, 0.2063, 0.3019, 0.1355, 0.1539]), tensor([0.9984, 0.7619, 0.8778, 0.8411, 0.8918, 0.8489, 0.4743]), tensor([0.5864, 0.2460, 0.4333, 0.0514, 0.0488, 0.0922, 0.9897]), tensor([0.3098, 0.1146, 0.2934, 0.7483, 0.9267, 0.0825, 0.4117]), tensor([0.2808, 0.6806, 0.8235, 0.7797, 0.6060, 0.7114, 0.6567]), tensor([0.6170, 0.8515, 0.8664, 0.3287, 0.4417, 0.0024, 0.9090]), tensor([0.3824, 0.8833, 0.2193, 0.0142, 0.3916, 0.7276, 0.6749]), tensor([0.8560, 0.7158, 0.8297, 0.0628, 0.1260, 0.3348, 0.9199]), tensor([0.2752, 0.5803, 0.8472, 0.8842, 0.1101, 0.9715, 0.8769]), tensor([0.0794, 0.4154, 0.2638, 0.0608, 0.6444, 0.5175, 0.0174]), tensor([0.2266, 0.8927, 0.4866, 0.8668, 0.2412, 0.1183, 0.7155]), tensor([0.0406, 0.5415, 0.1239, 0.0366, 0.8093, 0.2349, 0.9602]), tensor([0.6628, 0.0764, 0.4430, 0.2760, 0.2687, 0.5607, 0.4138]), tensor([0.8628, 0.1047, 0.5241, 0.8854, 0.5055, 0.9035, 0.7673]), tensor([0.6431, 0.9972, 0.0658, 0.1215, 0.3962, 0.1548, 0.1357]), tensor([0.6842, 0.5776, 0.8199, 0.8026, 0.6283, 0.7110, 0.0196]), tensor([0.2358, 0.8230, 0.7341, 0.1074, 0.4066, 0.5872, 0.7003]), tensor([0.3617, 0.6991, 0.8436, 0.6777, 0.3304, 0.3115, 0.3891]), tensor([0.8453, 0.7564, 0.7477, 0.8798, 0.2866, 0.8680, 0.0061]), tensor([0.4559, 0.3150, 0.3191, 0.7717, 0.4740, 0.3583, 0.3184]), tensor([0.5629, 0.5265, 0.4689, 0.3087, 0.2788, 0.7214, 0.8953]), tensor([0.9056, 0.6457, 0.4607, 0.5204, 0.5833, 0.9442, 0.2173]), tensor([0.8838, 0.7508, 0.8032, 0.4187, 0.9252, 0.3196, 0.7666]), tensor([0.0800, 0.1276, 0.2193, 0.5184, 0.9740, 0.0964, 0.3984]), tensor([0.1857, 0.9576, 0.8553, 0.6780, 0.0121, 0.1545, 0.1132]), tensor([0.5800, 0.9229, 0.1587, 0.9651, 0.9553, 0.8462, 0.6928]), tensor([0.6936, 0.0247, 0.4349, 0.6871, 0.4229, 0.9812, 0.4562]), tensor([0.6051, 0.1183, 0.1120, 0.8607, 0.9971, 0.3463, 0.7503]), tensor([0.2890, 0.2038, 0.7769, 0.8283, 0.4783, 0.6354, 0.5011]), tensor([0.7512, 0.5936, 0.7079, 0.8241, 0.9879, 0.2962, 0.5865]), tensor([0.2951, 0.3395, 0.4351, 0.6704, 0.0081, 0.7099, 0.8890]), tensor([0.0044, 0.3531, 0.8248, 0.5022, 0.0145, 0.6571, 0.9106]), tensor([0.3558, 0.7405, 0.4515, 0.3708, 0.6997, 0.5340, 0.7963]), tensor([0.5697, 0.9169, 0.3713, 0.2810, 0.0764, 0.7691, 0.2760])], 'Kp': tensor([[0.4123, 0.2714, 0.1076, 0.7344, 0.6952, 0.2783, 0.0123],\n        [0.0324, 0.4515, 0.2744, 0.4770, 0.5749, 0.0172, 0.4486],\n        [0.8576, 0.4319, 0.6890, 0.5091, 0.7165, 0.5081, 0.3288],\n        [0.6543, 0.0548, 0.3382, 0.6116, 0.0903, 0.5292, 0.7605],\n        [0.7072, 0.6678, 0.8949, 0.5379, 0.6050, 0.5280, 0.3873],\n        [0.2754, 0.1534, 0.8296, 0.0426, 0.0631, 0.6740, 0.0396],\n        [0.5344, 0.9870, 0.0375, 0.0443, 0.0783, 0.0179, 0.4248]]), 'Kd': tensor([[0.8540, 0.7398, 0.7602, 0.5758, 0.3917, 0.3543, 0.2871],\n        [0.8541, 0.3547, 0.0316, 0.2077, 0.3777, 0.9373, 0.7800],\n        [0.6092, 0.3000, 0.3420, 0.0731, 0.5623, 0.8382, 0.0255],\n        [0.7359, 0.8603, 0.9209, 0.3133, 0.7427, 0.7324, 0.6947],\n        [0.8773, 0.7597, 0.8168, 0.3082, 0.4439, 0.3520, 0.4265],\n        [0.8360, 0.4337, 0.8009, 0.1486, 0.7768, 0.9504, 0.5524],\n        [0.2902, 0.6834, 0.0555, 0.7115, 0.2824, 0.2300, 0.6161]]), 'robot_model': RobotModelPinocchio(), 'ignore_gravity': True}",
                "True",
                "None"
            ],
            [
                "<class 'torchcontrol.policies.trajectory.EndEffectorTrajectoryExecutor'>",
                "{'ee_pose_trajectory': [TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.3570, 0.1409, 0.3343, 0.8607])), \n\ttranslation=tensor([0.6491, 0.7640, 0.3387])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.4071, 0.3706, 0.4220, 0.7203])), \n\ttranslation=tensor([0.6113, 0.6001, 0.7929])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.4325, 0.1742, 0.3525, 0.8114])), \n\ttranslation=tensor([0.3035, 0.2881, 0.3712])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.3908, 0.3012, 0.3999, 0.7724])), \n\ttranslation=tensor([0.3330, 0.7246, 0.3128])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.1004, 0.2512, 0.0351, 0.9621])), \n\ttranslation=tensor([0.9055, 0.3229, 0.4892])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.3630, 0.2562, 0.0288, 0.8954])), \n\ttranslation=tensor([0.1407, 0.4712, 0.5900])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.0679, 0.1742, 0.0113, 0.9823])), \n\ttranslation=tensor([0.4204, 0.2686, 0.9945])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.0197, 0.1980, 0.3780, 0.9042])), \n\ttranslation=tensor([0.2362, 0.7416, 0.9633])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.2253, 0.0419, 0.4178, 0.8791])), \n\ttranslation=tensor([0.4827, 0.8312, 0.9078])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.2434, 0.3273, 0.1426, 0.9018])), \n\ttranslation=tensor([0.4246, 0.0664, 0.1770])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.0733, 0.1980, 0.2374, 0.9482])), \n\ttranslation=tensor([0.1173, 0.4002, 0.0118])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.1405, 0.0534, 0.4100, 0.8996])), \n\ttranslation=tensor([0.6440, 0.7481, 0.8026])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.2606, 0.1639, 0.2838, 0.9081])), \n\ttranslation=tensor([0.7303, 0.8751, 0.9587])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.1363, 0.3894, 0.4316, 0.8022])), \n\ttranslation=tensor([0.3961, 0.3366, 0.0881])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.0559, 0.3955, 0.0259, 0.9164])), \n\ttranslation=tensor([0.4934, 0.8530, 0.6692])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.1380, 0.1790, 0.3391, 0.9132])), \n\ttranslation=tensor([0.3534, 0.6227, 0.0432])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.4395, 0.1506, 0.0518, 0.8840])), \n\ttranslation=tensor([0.2068, 0.5694, 0.1582])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.1995, 0.0994, 0.3435, 0.9123])), \n\ttranslation=tensor([0.6734, 0.0770, 0.9883])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.1231, 0.4510, 0.0503, 0.8826])), \n\ttranslation=tensor([0.7764, 0.8811, 0.7574])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.2667, 0.0506, 0.0768, 0.9594])), \n\ttranslation=tensor([0.0430, 0.6321, 0.7772])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.2240, 0.0412, 0.3390, 0.9128])), \n\ttranslation=tensor([0.3896, 0.1639, 0.7870])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.4149, 0.1615, 0.4590, 0.7688])), \n\ttranslation=tensor([0.2359, 0.3991, 0.5379])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.4045, 0.0035, 0.0730, 0.9116])), \n\ttranslation=tensor([0.1963, 0.0662, 0.4716])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.3398, 0.3451, 0.2900, 0.8254])), \n\ttranslation=tensor([0.4731, 0.0518, 0.8990])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.2663, 0.2764, 0.1229, 0.9152])), \n\ttranslation=tensor([0.7729, 0.7208, 0.6063])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.4136, 0.1561, 0.0171, 0.8968])), \n\ttranslation=tensor([0.0620, 0.6682, 0.8703])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.3044, 0.1693, 0.3347, 0.8756])), \n\ttranslation=tensor([0.9060, 0.8134, 0.2918])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.2626, 0.4585, 0.2734, 0.8038])), \n\ttranslation=tensor([0.3049, 0.9000, 0.6623])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.0566, 0.0654, 0.3532, 0.9315])), \n\ttranslation=tensor([0.9439, 0.2970, 0.0405])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.1781, 0.2371, 0.0797, 0.9517])), \n\ttranslation=tensor([0.0569, 0.8084, 0.8850])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.2825, 0.0588, 0.4485, 0.8460])), \n\ttranslation=tensor([0.4620, 0.5279, 0.6580])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.4300, 0.0552, 0.1236, 0.8926])), \n\ttranslation=tensor([0.8585, 0.6761, 0.2111])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.3237, 0.3919, 0.2381, 0.8276])), \n\ttranslation=tensor([0.6333, 0.6209, 0.2235])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.2042, 0.3640, 0.0739, 0.9057])), \n\ttranslation=tensor([0.1207, 0.5575, 0.2174])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.0234, 0.1438, 0.2750, 0.9503])), \n\ttranslation=tensor([0.0900, 0.0535, 0.9789])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.1583, 0.3723, 0.2563, 0.8779])), \n\ttranslation=tensor([0.9549, 0.7907, 0.1122])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.1076, 0.2275, 0.4546, 0.8544])), \n\ttranslation=tensor([0.3475, 0.6796, 0.0861])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.1031, 0.3086, 0.2992, 0.8970])), \n\ttranslation=tensor([0.5694, 0.5017, 0.1002])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.1602, 0.2064, 0.4248, 0.8668])), \n\ttranslation=tensor([0.1062, 0.3972, 0.2831])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.0050, 0.0504, 0.3160, 0.9474])), \n\ttranslation=tensor([0.1058, 0.7345, 0.9246])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.3307, 0.1417, 0.4061, 0.8400])), \n\ttranslation=tensor([0.8421, 0.7179, 0.8206])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.3098, 0.3430, 0.3209, 0.8267])), \n\ttranslation=tensor([0.6523, 0.3606, 0.4030])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.2193, 0.4033, 0.3692, 0.8080])), \n\ttranslation=tensor([0.0494, 0.2292, 0.6039])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.2933, 0.0440, 0.3716, 0.8798])), \n\ttranslation=tensor([0.4760, 0.6800, 0.9506])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.4253, 0.3608, 0.2253, 0.7989])), \n\ttranslation=tensor([0.4801, 0.9194, 0.9220])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.3625, 0.0290, 0.2866, 0.8863])), \n\ttranslation=tensor([0.8583, 0.0662, 0.0266])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.2852, 0.3802, 0.2436, 0.8455])), \n\ttranslation=tensor([0.0430, 0.6653, 0.3271])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.0097, 0.1690, 0.0582, 0.9839])), \n\ttranslation=tensor([0.8863, 0.0539, 0.1142])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.0276, 0.1501, 0.2569, 0.9543])), \n\ttranslation=tensor([0.7495, 0.6000, 0.4857])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.1197, 0.2485, 0.3863, 0.8802])), \n\ttranslation=tensor([0.5248, 0.4964, 0.4711])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.2500, 0.2315, 0.4281, 0.8370])), \n\ttranslation=tensor([0.5722, 0.9669, 0.7262])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.3768, 0.2484, 0.3855, 0.8048])), \n\ttranslation=tensor([0.9675, 0.1650, 0.3371])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.3078, 0.0487, 0.0939, 0.9455])), \n\ttranslation=tensor([0.3070, 0.8785, 0.2037])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.2172, 0.0359, 0.4432, 0.8690])), \n\ttranslation=tensor([0.9855, 0.6736, 0.8106])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.4194, 0.2761, 0.2767, 0.8193])), \n\ttranslation=tensor([0.7366, 0.1213, 0.8794])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.2215, 0.4536, 0.4127, 0.7582])), \n\ttranslation=tensor([0.0635, 0.9479, 0.1662])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.3910, 0.2056, 0.1366, 0.8867])), \n\ttranslation=tensor([0.8604, 0.4001, 0.9238])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.2933, 0.3087, 0.2937, 0.8558])), \n\ttranslation=tensor([0.7897, 0.8732, 0.5135])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.4283, 0.0733, 0.0074, 0.9006])), \n\ttranslation=tensor([0.3369, 0.2663, 0.3625])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.1733, 0.2516, 0.1536, 0.9397])), \n\ttranslation=tensor([0.1766, 0.5901, 0.4360])\n)], 'ee_twist_trajectory': [tensor([0.2841, 0.9408, 0.8406, 0.4588, 0.1658, 0.7107]), tensor([0.4802, 0.9064, 0.2474, 0.2437, 0.6258, 0.4451]), tensor([0.2138, 0.6886, 0.2195, 0.7635, 0.0367, 0.1125]), tensor([0.4368, 0.8607, 0.3973, 0.4518, 0.4087, 0.9732]), tensor([0.5340, 0.3237, 0.1498, 0.7366, 0.0057, 0.9835]), tensor([0.3183, 0.2049, 0.1909, 0.0923, 0.3069, 0.4767]), tensor([0.9802, 0.2240, 0.7212, 0.3981, 0.6267, 0.8387]), tensor([0.8881, 0.9369, 0.9203, 0.4193, 0.0321, 0.8947]), tensor([0.7487, 0.3211, 0.0158, 0.0258, 0.8477, 0.7151]), tensor([0.4704, 0.7183, 0.8712, 0.7623, 0.8343, 0.6478]), tensor([0.5356, 0.2744, 0.5534, 0.4780, 0.2833, 0.1610]), tensor([0.6226, 0.0933, 0.5893, 0.1072, 0.0972, 0.2768]), tensor([0.0127, 0.3495, 0.0729, 0.8227, 0.3313, 0.3939]), tensor([0.2302, 0.5270, 0.0693, 0.4322, 0.2727, 0.7833]), tensor([0.7199, 0.2616, 0.8736, 0.9389, 0.4054, 0.8021]), tensor([0.0494, 0.1406, 0.9076, 0.3890, 0.3482, 0.3445]), tensor([0.0331, 0.2093, 0.1372, 0.5696, 0.4728, 0.9328]), tensor([0.6013, 0.8787, 0.5279, 0.9311, 0.0480, 0.2826]), tensor([0.7374, 0.7484, 0.1202, 0.9075, 0.9938, 0.0916]), tensor([0.9057, 0.5773, 0.2782, 0.3323, 0.1219, 0.3078]), tensor([0.1276, 0.6263, 0.1119, 0.2826, 0.5925, 0.9265]), tensor([0.3418, 0.3964, 0.0282, 0.9359, 0.6158, 0.8949]), tensor([0.6412, 0.9135, 0.4550, 0.9511, 0.3280, 0.4677]), tensor([0.9652, 0.1656, 0.8126, 0.5421, 0.8543, 0.3489]), tensor([0.5633, 0.5145, 0.6411, 0.7348, 0.7954, 0.5166]), tensor([0.4402, 0.2764, 0.7206, 0.7616, 0.7606, 0.9676]), tensor([0.0562, 0.2506, 0.3970, 0.6447, 0.8340, 0.0133]), tensor([0.9823, 0.6759, 0.9351, 0.6434, 0.5304, 0.0411]), tensor([0.5328, 0.2483, 0.2393, 0.8560, 0.6096, 0.6530]), tensor([0.8395, 0.9470, 0.1677, 0.7520, 0.9240, 0.0784]), tensor([0.0428, 0.6875, 0.6474, 0.9337, 0.7244, 0.6976]), tensor([0.6367, 0.3301, 0.1591, 0.5218, 0.2270, 0.0753]), tensor([0.9562, 0.4569, 0.5112, 0.3346, 0.7130, 0.7713]), tensor([0.0911, 0.8318, 0.1575, 0.0943, 0.7453, 0.8210]), tensor([0.2382, 0.5935, 0.3234, 0.5043, 0.8744, 0.9575]), tensor([0.7040, 0.7202, 0.1457, 0.6152, 0.8797, 0.9495]), tensor([0.2331, 0.8660, 0.1117, 0.9415, 0.9535, 0.9715]), tensor([0.7031, 0.4677, 0.7499, 0.3501, 0.4031, 0.5271]), tensor([0.8626, 0.3325, 0.3148, 0.0773, 0.0333, 0.9535]), tensor([0.1316, 0.8484, 0.5521, 0.4242, 0.2781, 0.9687]), tensor([0.9498, 0.2866, 0.3771, 0.4161, 0.1947, 0.8599]), tensor([0.0151, 0.1897, 0.5506, 0.1757, 0.8093, 0.7702]), tensor([0.6368, 0.6223, 0.4762, 0.4696, 0.3842, 0.8078]), tensor([0.9721, 0.2986, 0.7360, 0.4932, 0.5370, 0.2835]), tensor([0.1497, 0.7434, 0.7691, 0.9712, 0.8140, 0.6698]), tensor([0.4046, 0.1884, 0.1639, 0.2334, 0.3923, 0.0768]), tensor([0.7005, 0.1229, 0.7568, 0.3106, 0.3697, 0.7733]), tensor([0.8916, 0.2435, 0.3485, 0.8753, 0.5518, 0.4258]), tensor([0.6402, 0.8841, 0.6286, 0.9747, 0.8655, 0.0401]), tensor([0.6418, 0.9231, 0.7098, 0.3713, 0.1898, 0.5775]), tensor([0.4648, 0.7371, 0.6267, 0.7690, 0.5851, 0.8925]), tensor([0.3107, 0.3762, 0.4632, 0.7175, 0.5659, 0.9812]), tensor([0.5115, 0.1608, 0.1132, 0.5889, 0.3032, 0.5582]), tensor([0.9269, 0.9695, 0.9580, 0.6302, 0.1196, 0.2709]), tensor([0.0426, 0.0417, 0.2720, 0.0432, 0.0599, 0.9709]), tensor([0.1779, 0.9787, 0.1857, 0.0182, 0.4174, 0.7598]), tensor([0.1918, 0.4917, 0.9471, 0.1023, 0.5379, 0.8532]), tensor([0.1291, 0.0564, 0.4164, 0.1260, 0.5928, 0.5356]), tensor([0.8015, 0.9015, 0.3673, 0.1697, 0.6369, 0.9667]), tensor([0.4295, 0.1695, 0.7120, 0.0892, 0.5542, 0.0476])], 'Kp': tensor([[0.6491, 0.1218, 0.1920, 0.3707, 0.3434, 0.1095],\n        [0.7441, 0.6067, 0.4092, 0.1361, 0.4314, 0.7347],\n        [0.5490, 0.0834, 0.9509, 0.7362, 0.5000, 0.5896],\n        [0.0229, 0.3873, 0.8136, 0.2776, 0.8524, 0.4909],\n        [0.9324, 0.4960, 0.2579, 0.9376, 0.5510, 0.6883],\n        [0.5509, 0.4040, 0.8557, 0.8574, 0.3275, 0.9904]]), 'Kd': tensor([[0.6313, 0.3169, 0.9431, 0.3533, 0.9384, 0.0507],\n        [0.9363, 0.1870, 0.2976, 0.2855, 0.8024, 0.4873],\n        [0.1232, 0.5765, 0.9669, 0.0163, 0.3670, 0.5340],\n        [0.3777, 0.7607, 0.3152, 0.6121, 0.1340, 0.9085],\n        [0.3305, 0.1964, 0.4693, 0.3260, 0.7845, 0.9852],\n        [0.6581, 0.0097, 0.3449, 0.5390, 0.3796, 0.8221]]), 'robot_model': RobotModelPinocchio(), 'ignore_gravity': True}",
                "True",
                "None"
            ],
            [
                "<class 'torchcontrol.policies.trajectory.iLQR'>",
                "{'Kxs': tensor([[[0.7897, 0.1471, 0.0735,  ..., 0.6917, 0.3757, 0.8722],\n         [0.2346, 0.6484, 0.1410,  ..., 0.3370, 0.1359, 0.6749],\n         [0.1650, 0.4287, 0.6585,  ..., 0.0267, 0.9681, 0.0407],\n         ...,\n         [0.7472, 0.6755, 0.5913,  ..., 0.7718, 0.1707, 0.7516],\n         [0.5039, 0.6829, 0.0997,  ..., 0.3882, 0.2100, 0.3248],\n         [0.6764, 0.9497, 0.8263,  ..., 0.5867, 0.4754, 0.7516]],\n\n        [[0.6183, 0.7266, 0.2899,  ..., 0.9888, 0.3072, 0.8293],\n         [0.9753, 0.4230, 0.9619,  ..., 0.0849, 0.6860, 0.3236],\n         [0.5107, 0.5656, 0.6531,  ..., 0.3145, 0.4575, 0.7016],\n         ...,\n         [0.8047, 0.7433, 0.9519,  ..., 0.2328, 0.8190, 0.1447],\n         [0.6260, 0.4898, 0.4168,  ..., 0.4124, 0.0461, 0.5038],\n         [0.1015, 0.6731, 0.5258,  ..., 0.0751, 0.5226, 0.0085]],\n\n        [[0.3747, 0.3138, 0.3379,  ..., 0.9364, 0.2076, 0.0012],\n         [0.9900, 0.3159, 0.9669,  ..., 0.0244, 0.6026, 0.4350],\n         [0.9898, 0.6899, 0.4406,  ..., 0.4376, 0.2489, 0.3402],\n         ...,\n         [0.8987, 0.8403, 0.9332,  ..., 0.8187, 0.7760, 0.3534],\n         [0.4288, 0.4363, 0.0587,  ..., 0.6187, 0.8723, 0.4060],\n         [0.1701, 0.3064, 0.5403,  ..., 0.2965, 0.1819, 0.2511]],\n\n        ...,\n\n        [[0.4864, 0.1766, 0.1800,  ..., 0.2117, 0.3169, 0.6917],\n         [0.3822, 0.8135, 0.6013,  ..., 0.0486, 0.5083, 0.8505],\n         [0.0813, 0.3568, 0.0410,  ..., 0.0615, 0.3605, 0.0522],\n         ...,\n         [0.9119, 0.5633, 0.3616,  ..., 0.9108, 0.1962, 0.8636],\n         [0.2585, 0.1146, 0.2342,  ..., 0.8123, 0.3803, 0.3958],\n         [0.6010, 0.0896, 0.4598,  ..., 0.8054, 0.2654, 0.3244]],\n\n        [[0.2487, 0.3800, 0.1698,  ..., 0.5198, 0.7786, 0.3680],\n         [0.9815, 0.7706, 0.2375,  ..., 0.5909, 0.5056, 0.5693],\n         [0.2302, 0.0081, 0.6619,  ..., 0.4797, 0.6886, 0.1066],\n         ...,\n         [0.1547, 0.4383, 0.3320,  ..., 0.2387, 0.7841, 0.6137],\n         [0.3711, 0.8100, 0.9307,  ..., 0.7860, 0.1276, 0.4744],\n         [0.6240, 0.2253, 0.4770,  ..., 0.2013, 0.0182, 0.6044]],\n\n        [[0.4351, 0.6691, 0.3906,  ..., 0.2742, 0.8043, 0.4809],\n         [0.3212, 0.4135, 0.4371,  ..., 0.3113, 0.0403, 0.8333],\n         [0.7509, 0.7182, 0.2024,  ..., 0.2976, 0.0371, 0.4701],\n         ...,\n         [0.5938, 0.1318, 0.6295,  ..., 0.0018, 0.2498, 0.6281],\n         [0.3639, 0.7350, 0.9195,  ..., 0.1481, 0.5074, 0.3928],\n         [0.8655, 0.2494, 0.1909,  ..., 0.5495, 0.2234, 0.6496]]]), 'x_desireds': tensor([[4.2003e-01, 4.4707e-01, 6.7041e-02, 8.7648e-01, 6.0966e-01, 3.2712e-01,\n         3.8294e-02, 2.7316e-01, 9.3677e-01, 5.5287e-01, 8.3013e-01, 3.4249e-01,\n         1.7670e-01, 3.6128e-01],\n        [8.3953e-01, 3.7901e-02, 8.2287e-01, 4.6093e-01, 9.0574e-01, 1.2915e-01,\n         1.3833e-01, 7.5464e-01, 9.0020e-01, 7.0166e-02, 6.4068e-01, 4.9491e-01,\n         8.8693e-01, 7.4008e-01],\n        [6.3605e-01, 8.7043e-01, 3.3812e-01, 6.5697e-01, 1.5026e-04, 2.3092e-01,\n         9.6921e-01, 9.4482e-01, 1.1460e-01, 6.9511e-01, 2.9909e-01, 6.4121e-01,\n         1.4911e-01, 9.5702e-01],\n        [6.2344e-01, 6.1863e-01, 8.3392e-01, 7.8062e-01, 5.0677e-01, 8.8915e-01,\n         3.7706e-01, 1.0332e-01, 8.6493e-01, 2.2794e-01, 3.4944e-01, 5.8112e-01,\n         8.8365e-01, 6.4163e-01],\n        [3.6528e-01, 5.0226e-01, 9.6823e-01, 3.9872e-01, 6.0389e-01, 6.0914e-01,\n         4.0110e-01, 1.2168e-01, 8.6777e-01, 2.8202e-01, 8.6152e-02, 5.1146e-02,\n         7.0114e-01, 3.1227e-01],\n        [9.3170e-01, 5.9249e-01, 4.1191e-01, 1.8448e-02, 2.3006e-01, 9.1946e-01,\n         1.9753e-01, 6.4723e-01, 1.0268e-01, 3.0679e-01, 2.1128e-01, 9.0164e-01,\n         1.1382e-01, 8.5640e-01],\n        [6.7829e-01, 1.8683e-01, 2.1541e-01, 4.3826e-01, 1.4820e-01, 6.2343e-01,\n         7.6896e-01, 3.6013e-01, 8.2631e-01, 4.9650e-01, 6.9769e-02, 1.8115e-01,\n         7.5905e-01, 7.6187e-01],\n        [4.3425e-01, 9.2714e-01, 8.4167e-01, 8.1684e-01, 2.3397e-01, 9.6151e-01,\n         8.6610e-01, 5.0298e-01, 3.8682e-01, 8.8758e-01, 9.0975e-01, 3.0514e-01,\n         8.6978e-01, 3.2695e-01],\n        [4.6544e-01, 4.9893e-01, 2.4320e-01, 9.7055e-02, 3.5860e-01, 9.5392e-01,\n         3.4687e-01, 4.7480e-01, 9.8415e-01, 6.0258e-01, 4.1044e-01, 9.3807e-01,\n         4.3678e-01, 4.1172e-01],\n        [6.8358e-01, 1.7004e-01, 9.6525e-01, 6.8237e-01, 7.3009e-02, 7.7180e-01,\n         1.7176e-01, 1.5008e-02, 1.1394e-01, 6.5170e-01, 7.8758e-02, 5.0651e-01,\n         8.7572e-01, 7.9620e-01],\n        [8.4329e-02, 2.3741e-01, 1.4175e-01, 4.3646e-03, 2.9998e-01, 9.2205e-01,\n         5.4708e-01, 9.1971e-01, 4.0809e-01, 6.7163e-02, 9.4974e-01, 5.8075e-01,\n         2.1254e-01, 5.5915e-01],\n        [8.9904e-01, 6.7914e-01, 2.4490e-01, 8.5474e-01, 6.5343e-01, 4.0738e-01,\n         1.2433e-01, 1.6816e-01, 5.9782e-01, 1.1472e-01, 2.4426e-01, 7.3923e-01,\n         1.1251e-01, 8.9434e-01],\n        [8.6899e-01, 2.3712e-01, 9.3090e-01, 9.9848e-01, 5.1757e-01, 8.9839e-01,\n         8.8105e-01, 9.3413e-01, 8.5008e-01, 2.1298e-01, 2.0784e-01, 6.1299e-01,\n         8.1265e-02, 7.2167e-01],\n        [9.7908e-01, 8.9739e-01, 7.3311e-01, 7.1227e-01, 7.4531e-01, 6.2844e-01,\n         1.0664e-01, 4.1074e-01, 8.4367e-01, 4.9501e-01, 5.2557e-01, 3.2406e-01,\n         1.4896e-01, 8.9295e-01],\n        [6.5273e-01, 5.0630e-01, 5.8882e-01, 3.0431e-01, 2.9134e-01, 8.6328e-01,\n         4.3743e-01, 6.6051e-01, 4.3204e-01, 3.7362e-01, 6.5783e-01, 8.4904e-01,\n         7.7509e-01, 5.6082e-01],\n        [7.0741e-01, 7.2231e-01, 3.0744e-01, 3.7022e-01, 1.8100e-01, 4.9075e-01,\n         1.9986e-01, 6.1751e-01, 7.7890e-01, 2.3916e-01, 6.0791e-01, 4.1939e-01,\n         6.0089e-01, 2.6307e-01],\n        [4.4176e-01, 6.1587e-01, 6.0638e-01, 1.6531e-01, 2.3179e-01, 9.3224e-01,\n         9.8643e-01, 5.1352e-01, 4.1802e-01, 1.9094e-01, 6.1066e-01, 6.3986e-02,\n         7.7820e-01, 5.0129e-01],\n        [8.0304e-01, 5.8955e-01, 3.5859e-01, 1.5257e-02, 2.2100e-02, 9.6553e-02,\n         4.2102e-01, 4.9921e-01, 5.5135e-01, 6.3709e-01, 3.2145e-01, 5.6042e-02,\n         3.5313e-01, 5.2005e-01],\n        [2.6307e-01, 2.2773e-01, 8.3197e-01, 1.7084e-01, 6.7918e-01, 3.0089e-01,\n         4.4908e-01, 1.1418e-01, 2.7696e-01, 6.3913e-01, 3.6713e-02, 9.6172e-01,\n         8.0416e-01, 2.5606e-01],\n        [9.4935e-01, 6.9715e-01, 4.9663e-01, 6.9708e-01, 3.0264e-01, 4.4175e-01,\n         5.0544e-01, 2.9097e-01, 4.8095e-01, 8.7744e-01, 8.9288e-02, 8.5163e-01,\n         7.7575e-01, 8.0424e-02],\n        [5.2425e-01, 8.9862e-01, 4.1368e-01, 1.1934e-01, 2.8821e-01, 5.1244e-01,\n         2.6409e-01, 8.1197e-01, 2.4903e-01, 2.6701e-01, 6.9160e-01, 9.3623e-01,\n         2.9078e-02, 8.6860e-01],\n        [3.2809e-01, 5.9962e-01, 9.4520e-01, 5.8127e-01, 1.0820e-01, 7.8029e-01,\n         1.5562e-01, 5.0611e-02, 5.2105e-01, 1.7058e-01, 6.2476e-01, 6.6440e-01,\n         7.2858e-01, 6.9679e-01],\n        [6.2388e-01, 4.8139e-01, 2.3220e-01, 5.4172e-01, 7.7001e-01, 9.7581e-01,\n         9.8302e-01, 6.2818e-01, 7.8202e-02, 8.5333e-01, 5.0306e-01, 8.7198e-01,\n         5.7517e-02, 8.4038e-01],\n        [2.9794e-01, 6.9537e-01, 6.8618e-01, 4.3101e-01, 5.6322e-01, 4.0856e-01,\n         1.0853e-03, 1.7221e-01, 8.0431e-01, 9.6071e-02, 9.1400e-02, 3.3159e-01,\n         7.1606e-01, 3.9156e-01],\n        [4.2671e-01, 6.5097e-01, 5.4206e-01, 1.8353e-01, 3.2667e-01, 9.9211e-01,\n         9.8068e-01, 7.9669e-02, 6.3985e-01, 6.2298e-01, 8.4864e-01, 7.9325e-01,\n         9.9939e-01, 5.2759e-01],\n        [3.2820e-01, 3.5338e-02, 7.5029e-01, 3.9351e-01, 4.2791e-02, 5.2572e-01,\n         6.7375e-01, 1.0451e-01, 2.5394e-01, 1.0254e-01, 8.9688e-02, 9.5646e-01,\n         6.3757e-01, 3.9994e-01],\n        [7.7546e-01, 7.5166e-01, 7.2742e-01, 3.2160e-01, 5.2121e-02, 1.7936e-01,\n         1.4335e-01, 3.1630e-01, 6.0361e-01, 8.7590e-01, 8.2745e-01, 6.4287e-01,\n         4.1184e-01, 2.5188e-01],\n        [5.5003e-01, 1.9929e-01, 1.0431e-01, 8.2530e-01, 8.7494e-01, 8.3489e-01,\n         9.3769e-01, 9.4778e-01, 1.0287e-01, 7.0251e-01, 7.0985e-02, 3.9101e-01,\n         6.1826e-01, 6.5719e-01],\n        [2.3675e-01, 8.6889e-01, 5.5061e-01, 8.6341e-01, 3.3706e-03, 2.4274e-01,\n         7.7014e-01, 5.0131e-02, 6.5613e-01, 6.0741e-02, 8.9036e-01, 1.4987e-01,\n         8.6532e-01, 3.9655e-02],\n        [9.2053e-01, 3.6390e-01, 4.7634e-01, 5.6423e-01, 4.7357e-01, 6.3425e-01,\n         8.3856e-01, 5.6430e-01, 8.9314e-01, 3.9058e-01, 8.5880e-01, 9.4814e-02,\n         1.3392e-01, 6.7021e-01],\n        [8.0097e-01, 5.2336e-01, 5.8259e-01, 2.0605e-01, 6.6964e-01, 6.8199e-01,\n         8.2718e-01, 3.0904e-01, 6.1889e-01, 4.7383e-01, 8.7732e-01, 8.0847e-01,\n         1.7195e-01, 7.8830e-01],\n        [5.7002e-01, 1.7821e-01, 3.7849e-01, 7.5122e-01, 4.6176e-01, 5.1114e-01,\n         6.7883e-01, 5.5325e-01, 3.1616e-01, 3.2643e-01, 3.8385e-01, 9.4495e-01,\n         3.2603e-01, 5.4559e-01],\n        [9.3970e-01, 1.7551e-01, 5.5708e-01, 5.6032e-01, 5.0830e-01, 9.7755e-01,\n         8.0766e-01, 1.2645e-01, 4.3985e-01, 4.8836e-01, 5.2102e-01, 7.2746e-01,\n         1.0082e-01, 1.1250e-01],\n        [7.3503e-01, 3.4475e-01, 7.7234e-01, 4.0524e-01, 5.6936e-01, 3.8860e-01,\n         3.6865e-01, 2.0269e-01, 1.4781e-01, 1.8175e-01, 1.4739e-01, 8.3980e-01,\n         3.3641e-02, 9.0628e-01],\n        [8.1680e-01, 2.5433e-01, 4.5863e-01, 9.2493e-01, 3.7491e-01, 8.8177e-01,\n         7.2115e-01, 8.6821e-01, 3.2992e-02, 2.7112e-01, 6.3176e-01, 5.3055e-01,\n         9.1212e-01, 5.4648e-01],\n        [3.0702e-01, 5.2073e-01, 3.2047e-01, 9.8547e-01, 6.2334e-01, 4.9891e-01,\n         4.3700e-01, 7.5589e-01, 1.8116e-01, 9.2135e-01, 7.6779e-01, 5.1119e-01,\n         4.4911e-02, 7.8753e-01],\n        [9.2204e-01, 3.4700e-01, 5.4945e-01, 4.1919e-01, 8.3260e-01, 7.3805e-01,\n         5.5527e-01, 1.4701e-01, 8.4227e-01, 1.0313e-01, 9.5012e-01, 7.0649e-01,\n         7.6220e-01, 9.2582e-01],\n        [2.2397e-01, 9.3671e-01, 1.9791e-01, 3.9798e-01, 3.5710e-01, 4.6740e-01,\n         2.1312e-02, 6.9642e-01, 9.2091e-02, 6.9084e-01, 2.0435e-01, 3.4812e-02,\n         4.4179e-01, 6.2055e-01],\n        [5.9980e-01, 8.9515e-01, 6.1008e-01, 3.4225e-01, 5.0563e-01, 7.9590e-01,\n         3.0521e-01, 2.5347e-01, 6.0585e-01, 3.1849e-01, 8.0892e-02, 2.2330e-01,\n         1.1334e-01, 9.0863e-01],\n        [6.5847e-01, 5.2671e-01, 5.7851e-01, 4.9455e-01, 5.7405e-01, 5.0702e-01,\n         9.3828e-01, 4.5589e-01, 4.9269e-02, 1.1028e-01, 9.0940e-01, 5.5186e-01,\n         4.6654e-01, 2.9820e-01],\n        [1.6304e-01, 2.1010e-01, 6.3961e-01, 8.8340e-01, 2.5116e-01, 8.3933e-01,\n         3.5935e-01, 7.5181e-01, 3.8605e-01, 2.7039e-01, 8.4979e-01, 3.5200e-01,\n         5.8955e-02, 8.6577e-01],\n        [8.5659e-01, 2.3831e-01, 2.6246e-01, 5.9679e-01, 6.7248e-01, 2.6016e-02,\n         1.5846e-01, 2.5011e-01, 1.0174e-01, 5.6186e-01, 7.3694e-01, 2.7528e-01,\n         4.8757e-01, 2.6580e-01],\n        [5.4626e-01, 1.7974e-01, 7.6855e-01, 4.5736e-01, 2.4547e-01, 4.8816e-01,\n         5.2083e-01, 4.2987e-01, 7.3258e-03, 2.2435e-01, 9.9820e-01, 2.7795e-01,\n         6.3551e-01, 6.7236e-01],\n        [3.5871e-01, 9.6153e-01, 9.2932e-01, 2.9726e-01, 6.9663e-01, 3.4255e-01,\n         8.5867e-01, 5.4277e-01, 4.2427e-02, 8.2380e-01, 2.6022e-01, 9.2202e-01,\n         1.0742e-01, 6.3393e-01],\n        [5.7391e-03, 8.3325e-01, 2.7765e-02, 5.9996e-01, 6.5977e-01, 2.5671e-01,\n         2.9132e-01, 1.0191e-01, 3.6022e-01, 3.0502e-01, 1.9009e-01, 7.7004e-02,\n         5.8653e-01, 2.6680e-01],\n        [7.7349e-01, 7.3487e-02, 9.8359e-01, 7.4688e-01, 3.3143e-01, 8.8227e-01,\n         5.7553e-01, 2.6110e-01, 2.8306e-01, 3.8956e-01, 7.4063e-01, 5.6178e-01,\n         3.3496e-01, 8.8883e-01],\n        [3.2631e-01, 7.9335e-01, 6.6190e-01, 9.0512e-01, 9.8090e-01, 1.6653e-01,\n         9.2334e-01, 2.3074e-02, 5.6819e-01, 6.5363e-01, 5.0539e-01, 6.5430e-01,\n         8.9297e-01, 7.7476e-01],\n        [5.9015e-01, 5.7675e-01, 2.3123e-01, 7.8704e-01, 7.3273e-01, 3.7809e-01,\n         8.9037e-01, 5.8661e-01, 2.9721e-01, 5.8316e-01, 8.1043e-01, 6.9333e-01,\n         4.6601e-02, 8.5810e-01],\n        [7.7986e-02, 2.9651e-01, 6.8721e-01, 7.5862e-01, 1.9209e-01, 9.0518e-01,\n         2.0590e-01, 3.3050e-01, 8.6235e-01, 5.9781e-01, 1.7490e-01, 8.6772e-01,\n         8.2730e-01, 9.7907e-01],\n        [4.4124e-01, 3.5216e-01, 8.5777e-01, 5.8767e-01, 4.9824e-01, 9.2739e-01,\n         2.5393e-01, 6.4386e-01, 8.5875e-01, 6.3923e-01, 6.4213e-01, 3.8310e-01,\n         6.3951e-01, 8.3045e-01],\n        [5.5786e-01, 4.9704e-01, 6.5170e-01, 9.5843e-01, 3.1206e-01, 1.7890e-01,\n         4.8956e-01, 9.8197e-01, 5.5882e-01, 2.3925e-02, 9.8675e-01, 2.7729e-01,\n         1.6050e-01, 5.7458e-01],\n        [2.8564e-01, 5.2812e-02, 5.7504e-01, 7.7095e-01, 2.6320e-01, 6.1230e-01,\n         4.9005e-01, 1.2787e-01, 8.7196e-01, 5.9701e-01, 7.6338e-01, 8.7120e-01,\n         1.2046e-01, 2.5992e-01],\n        [1.8575e-02, 2.4272e-01, 7.0693e-01, 5.9898e-01, 5.5666e-01, 8.4494e-01,\n         2.2350e-01, 8.2209e-02, 2.8182e-01, 3.1216e-01, 5.2575e-01, 7.3177e-01,\n         5.2155e-01, 7.6004e-01],\n        [6.4869e-01, 7.3665e-02, 4.1513e-01, 7.1939e-02, 8.5071e-01, 7.3800e-01,\n         2.8910e-02, 6.3326e-01, 3.9960e-01, 8.6525e-01, 9.0732e-01, 9.7947e-01,\n         2.6823e-01, 6.2233e-01],\n        [2.9093e-01, 8.8387e-01, 4.3192e-01, 8.8832e-01, 3.6456e-01, 8.0451e-01,\n         6.6659e-01, 3.2073e-01, 5.3365e-01, 4.5812e-02, 2.8010e-01, 9.8940e-01,\n         9.1895e-01, 1.4928e-01],\n        [8.3005e-01, 8.5257e-01, 8.7868e-02, 4.6754e-02, 9.3454e-01, 3.6240e-01,\n         3.1366e-01, 9.1193e-01, 7.5754e-01, 8.2936e-01, 5.2647e-01, 9.6330e-01,\n         1.7042e-01, 2.1149e-01],\n        [6.5112e-02, 1.4399e-01, 1.5982e-01, 7.8887e-01, 3.1266e-01, 2.5991e-01,\n         6.4966e-01, 3.4790e-01, 3.3348e-02, 4.7871e-01, 1.5503e-01, 9.1153e-01,\n         2.7834e-01, 5.5079e-02],\n        [6.9062e-01, 8.6990e-01, 5.0508e-01, 5.5609e-01, 8.0904e-01, 2.7192e-01,\n         5.9470e-01, 2.0622e-01, 5.1040e-02, 1.5235e-01, 6.2428e-01, 6.6564e-02,\n         6.9704e-01, 5.3637e-01],\n        [9.1167e-01, 7.6664e-01, 8.8163e-01, 6.2842e-01, 3.2941e-01, 7.8978e-01,\n         4.9387e-01, 6.6086e-01, 4.7024e-01, 8.6521e-01, 4.7883e-01, 8.7207e-01,\n         8.4152e-01, 7.1684e-02],\n        [4.3376e-02, 6.2497e-01, 9.8273e-01, 5.9929e-01, 2.4299e-02, 4.3338e-01,\n         7.9257e-01, 8.9716e-01, 3.9752e-01, 5.9334e-01, 6.3370e-02, 7.0500e-01,\n         2.7762e-01, 8.6269e-01]]), 'u_ffs': tensor([[0.5776, 0.7609, 0.7650, 0.2031, 0.9350, 0.6849, 0.8095],\n        [0.9768, 0.6042, 0.7627, 0.8665, 0.1029, 0.0712, 0.3938],\n        [0.9388, 0.0083, 0.0959, 0.6892, 0.4503, 0.3724, 0.0087],\n        [0.8975, 0.6893, 0.2571, 0.9017, 0.8521, 0.3189, 0.0998],\n        [0.6485, 0.5323, 0.5664, 0.1324, 0.3267, 0.7552, 0.1057],\n        [0.5291, 0.0116, 0.9794, 0.4302, 0.4861, 0.9438, 0.6101],\n        [0.7153, 0.1723, 0.3444, 0.8510, 0.3908, 0.8925, 0.4453],\n        [0.5617, 0.6431, 0.4277, 0.1827, 0.2264, 0.2161, 0.4681],\n        [0.9353, 0.8171, 0.1444, 0.2298, 0.3439, 0.6824, 0.6302],\n        [0.1293, 0.2739, 0.7104, 0.6442, 0.1243, 0.7603, 0.6804],\n        [0.0329, 0.6370, 0.1004, 0.6299, 0.2210, 0.8797, 0.2459],\n        [0.0859, 0.7234, 0.2766, 0.1784, 0.4020, 0.6366, 0.4370],\n        [0.8429, 0.3298, 0.7466, 0.2624, 0.3878, 0.4852, 0.1332],\n        [0.3199, 0.4775, 0.9770, 0.6906, 0.2369, 0.5226, 0.9525],\n        [0.5962, 0.0641, 0.1032, 0.7012, 0.5455, 0.0395, 0.3832],\n        [0.2504, 0.7077, 0.8117, 0.6037, 0.9558, 0.4445, 0.4815],\n        [0.6305, 0.2391, 0.1166, 0.8806, 0.7748, 0.0706, 0.5760],\n        [0.1544, 0.6470, 0.8889, 0.0307, 0.9972, 0.1639, 0.6097],\n        [0.0471, 0.0362, 0.2999, 0.2860, 0.5596, 0.6966, 0.5513],\n        [0.9751, 0.6697, 0.2922, 0.3018, 0.5811, 0.4646, 0.2299],\n        [0.0269, 0.5094, 0.3423, 0.2678, 0.4730, 0.5047, 0.8943],\n        [0.0629, 0.5937, 0.0558, 0.0099, 0.3656, 0.2954, 0.6826],\n        [0.0277, 0.2872, 0.0636, 0.9405, 0.7425, 0.3687, 0.6553],\n        [0.5561, 0.0610, 0.2012, 0.1231, 0.4737, 0.8245, 0.7477],\n        [0.9831, 0.1840, 0.0982, 0.2279, 0.2820, 0.3606, 0.5422],\n        [0.9311, 0.2617, 0.2636, 0.8362, 0.2422, 0.9944, 0.3339],\n        [0.7111, 0.7451, 0.0434, 0.9270, 0.6999, 0.8772, 0.9843],\n        [0.8962, 0.2768, 0.2200, 0.3981, 0.1536, 0.4491, 0.8612],\n        [0.2283, 0.3586, 0.6905, 0.6638, 0.3300, 0.9523, 0.5834],\n        [0.3859, 0.7155, 0.4904, 0.4051, 0.4805, 0.6082, 0.0851],\n        [0.0641, 0.0756, 0.0658, 0.9514, 0.6062, 0.0978, 0.1408],\n        [0.5563, 0.7682, 0.5383, 0.0500, 0.7375, 0.1721, 0.3335],\n        [0.3773, 0.9685, 0.1387, 0.1156, 0.1156, 0.1536, 0.7267],\n        [0.4529, 0.0465, 0.1008, 0.8608, 0.7793, 0.4822, 0.3942],\n        [0.9627, 0.2864, 0.6631, 0.1700, 0.2002, 0.5476, 0.1152],\n        [0.7224, 0.5294, 0.1133, 0.9248, 0.8041, 0.9838, 0.9982],\n        [0.1680, 0.6615, 0.5469, 0.1405, 0.7304, 0.5713, 0.7849],\n        [0.7027, 0.6449, 0.7286, 0.6884, 0.0690, 0.0715, 0.2263],\n        [0.0815, 0.3492, 0.6327, 0.0702, 0.2012, 0.7062, 0.6019],\n        [0.9271, 0.7076, 0.6779, 0.7436, 0.7192, 0.6303, 0.5596],\n        [0.3616, 0.4486, 0.9088, 0.8439, 0.4325, 0.3648, 0.2563],\n        [0.2929, 0.8122, 0.8388, 0.1567, 0.9923, 0.0892, 0.2408],\n        [0.8471, 0.6053, 0.3185, 0.6083, 0.1015, 0.6169, 0.5709],\n        [0.3831, 0.0241, 0.8011, 0.1284, 0.3071, 0.0149, 0.1548],\n        [0.6121, 0.8555, 0.6452, 0.8616, 0.7552, 0.3142, 0.3094],\n        [0.8248, 0.8931, 0.8625, 0.5918, 0.1158, 0.5504, 0.7794],\n        [0.6700, 0.2099, 0.1537, 0.8968, 0.5799, 0.8410, 0.9681],\n        [0.3229, 0.8170, 0.7971, 0.7999, 0.8923, 0.1120, 0.5634],\n        [0.3993, 0.1681, 0.3939, 0.5126, 0.7807, 0.7836, 0.6096],\n        [0.5930, 0.1453, 0.7987, 0.5207, 0.4527, 0.3992, 0.2538],\n        [0.4174, 0.1257, 0.1117, 0.3354, 0.2888, 0.7939, 0.2633],\n        [0.4021, 0.5595, 0.1673, 0.2782, 0.1471, 0.5000, 0.9685],\n        [0.6492, 0.0991, 0.1297, 0.4173, 0.7547, 0.5605, 0.9392],\n        [0.1313, 0.9626, 0.9126, 0.0275, 0.2696, 0.5440, 0.3045],\n        [0.5535, 0.7213, 0.9985, 0.4803, 0.1563, 0.8496, 0.0513],\n        [0.5643, 0.9991, 0.2839, 0.7844, 0.7261, 0.4175, 0.5579],\n        [0.4785, 0.8939, 0.2612, 0.9174, 0.3863, 0.1688, 0.5426],\n        [0.5010, 0.8332, 0.0424, 0.3017, 0.1105, 0.4392, 0.4988],\n        [0.4272, 0.1429, 0.7635, 0.4129, 0.5710, 0.2814, 0.2087],\n        [0.4221, 0.0162, 0.0800, 0.5544, 0.9734, 0.2048, 0.9735]])}",
                "True",
                "None"
            ]
        ],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "c9b99834eb00020a4f87fdd44ce01ee784bbe2277ca2053647656615856692a1",
        "warmup_time": -1
    },
    "benchmark_policy_performance.Suite.time_scripted_policy_performance": {
        "code": "class Suite:\n    def time_scripted_policy_performance(self, param):\n        policy_class, policy_kwargs, is_terminating, update_params = param\n        policy = policy_class(**policy_kwargs)\n        scripted_policy = torch.jit.script(policy)\n    \n        with torch.no_grad():\n            scripted_policy.forward(inputs)",
        "min_run_count": 2,
        "name": "benchmark_policy_performance.Suite.time_scripted_policy_performance",
        "number": 0,
        "param_names": [
            "param1",
            "param2",
            "param3",
            "param4",
            "param5"
        ],
        "params": [
            [
                "<class 'torchcontrol.policies.impedance.JointImpedanceControl'>",
                "{'joint_pos_current': tensor([0.0492, 0.8358, 0.3921, 0.7923, 0.2907, 0.4482, 0.4683]), 'Kp': tensor([[0.4091, 0.3197, 0.7821, 0.1248, 0.2313, 0.4346, 0.8125],\n        [0.7133, 0.1769, 0.9249, 0.5033, 0.3003, 0.1878, 0.6444],\n        [0.5048, 0.4608, 0.1499, 0.0315, 0.1829, 0.8294, 0.6352],\n        [0.3277, 0.1041, 0.1403, 0.7604, 0.2082, 0.0597, 0.2345],\n        [0.1661, 0.2952, 0.0027, 0.2634, 0.4023, 0.3787, 0.2348],\n        [0.0714, 0.3800, 0.4440, 0.6978, 0.6561, 0.4257, 0.8784],\n        [0.5987, 0.2944, 0.0925, 0.5561, 0.6512, 0.7205, 0.3202]]), 'Kd': tensor([[0.4710, 0.1362, 0.3888, 0.3463, 0.6567, 0.1592, 0.8545],\n        [0.0605, 0.5008, 0.7950, 0.9184, 0.9575, 0.9026, 0.5697],\n        [0.3395, 0.4990, 0.1675, 0.7599, 0.6531, 0.8564, 0.2134],\n        [0.3409, 0.2167, 0.2933, 0.0914, 0.4195, 0.8883, 0.9073],\n        [0.5131, 0.6721, 0.8363, 0.5493, 0.0042, 0.7288, 0.5191],\n        [0.8295, 0.6277, 0.5438, 0.9443, 0.6177, 0.1148, 0.9407],\n        [0.3685, 0.0584, 0.4166, 0.3530, 0.8796, 0.9661, 0.1478]]), 'robot_model': RobotModelPinocchio()}",
                "False",
                "{'joint_pos_desired': tensor([0.4305, 0.6642, 0.1627, 0.8004, 0.1155, 0.5242, 0.9685])}"
            ],
            [
                "<class 'torchcontrol.policies.impedance.CartesianImpedanceControl'>",
                "{'joint_pos_current': tensor([0.3366, 0.0551, 0.2847, 0.0279, 0.4955, 0.5389, 0.1185]), 'Kp': tensor([[0.7987, 0.9945, 0.5021, 0.3025, 0.9820, 0.4588],\n        [0.5917, 0.8500, 0.4797, 0.0954, 0.6332, 0.0745],\n        [0.9390, 0.8838, 0.4018, 0.8751, 0.3609, 0.5827],\n        [0.5008, 0.3848, 0.2522, 0.6502, 0.3266, 0.1745],\n        [0.7992, 0.9523, 0.7282, 0.1945, 0.3804, 0.5748],\n        [0.1413, 0.9906, 0.4644, 0.8437, 0.4786, 0.5133]]), 'Kd': tensor([[0.8248, 0.6203, 0.2512, 0.5587, 0.7077, 0.2884],\n        [0.2743, 0.2702, 0.5807, 0.3157, 0.4314, 0.1246],\n        [0.3009, 0.0019, 0.8034, 0.1744, 0.2316, 0.9071],\n        [0.6102, 0.4919, 0.3660, 0.6590, 0.9855, 0.6857],\n        [0.7248, 0.8726, 0.0385, 0.4281, 0.3936, 0.1544],\n        [0.5140, 0.1840, 0.6979, 0.8638, 0.2212, 0.6545]]), 'robot_model': RobotModelPinocchio()}",
                "False",
                "{'ee_pos_desired': tensor([0.9584, 0.9292, 0.6021])}"
            ],
            [
                "<class 'torchcontrol.policies.trajectory.JointTrajectoryExecutor'>",
                "{'joint_pos_trajectory': [tensor([6.3166e-01, 1.5205e-04, 9.4499e-02, 7.5742e-01, 2.5101e-01, 4.7414e-01,\n        9.3250e-01]), tensor([0.5408, 0.8747, 0.0822, 0.9388, 0.8841, 0.2060, 0.0037]), tensor([0.4957, 0.7944, 0.1509, 0.1211, 0.0350, 0.5698, 0.1744]), tensor([0.2699, 0.8901, 0.1518, 0.4761, 0.7561, 0.3122, 0.1608]), tensor([0.0660, 0.6187, 0.1203, 0.0749, 0.8078, 0.9920, 0.0034]), tensor([0.2420, 0.1337, 0.7655, 0.2909, 0.2893, 0.0595, 0.5424]), tensor([0.4608, 0.9001, 0.9483, 0.5157, 0.3659, 0.2464, 0.4968]), tensor([0.4462, 0.9089, 0.1683, 0.7337, 0.4409, 0.4416, 0.9821]), tensor([0.6385, 0.5250, 0.3974, 0.7834, 0.8148, 0.1365, 0.3488]), tensor([0.5385, 0.0663, 0.4118, 0.1308, 0.6163, 0.2260, 0.4499]), tensor([0.6717, 0.7801, 0.5308, 0.3211, 0.8365, 0.4018, 0.1691]), tensor([0.0829, 0.4174, 0.0944, 0.7881, 0.3800, 0.5057, 0.7644]), tensor([0.3627, 0.7228, 0.9968, 0.7801, 0.1403, 0.1376, 0.9145]), tensor([0.2461, 0.9929, 0.2474, 0.6605, 0.2970, 0.5756, 0.0201]), tensor([0.8820, 0.6436, 0.7894, 0.0879, 0.6688, 0.9785, 0.7222]), tensor([0.4880, 0.4670, 0.6309, 0.6565, 0.5668, 0.7890, 0.3009]), tensor([0.3155, 0.6004, 0.1868, 0.2936, 0.7277, 0.8809, 0.2225]), tensor([0.9727, 0.7595, 0.3781, 0.8334, 0.1439, 0.7148, 0.9824]), tensor([0.7935, 0.9409, 0.7606, 0.1460, 0.0983, 0.8478, 0.0202]), tensor([0.5775, 0.6219, 0.6167, 0.4915, 0.1309, 0.6677, 0.2666]), tensor([0.7203, 0.7570, 0.6667, 0.2994, 0.2947, 0.3694, 0.5362]), tensor([0.6039, 0.3505, 0.0741, 0.4142, 0.3017, 0.2464, 0.5737]), tensor([0.7477, 0.9072, 0.6400, 0.2320, 0.8175, 0.3222, 0.2659]), tensor([0.0167, 0.9040, 0.7798, 0.0301, 0.8187, 0.1599, 0.4815]), tensor([0.9677, 0.3085, 0.5449, 0.0895, 0.5489, 0.2078, 0.6427]), tensor([0.2472, 0.4509, 0.1263, 0.7185, 0.2897, 0.7604, 0.9020]), tensor([0.2910, 0.3376, 0.8744, 0.8656, 0.3581, 0.2230, 0.8426]), tensor([0.9771, 0.1433, 0.6179, 0.3240, 0.7624, 0.9343, 0.5049]), tensor([0.4609, 0.9133, 0.5004, 0.2540, 0.7561, 0.7231, 0.2209]), tensor([0.4865, 0.5894, 0.4839, 0.9696, 0.6075, 0.3229, 0.5412]), tensor([0.6128, 0.6347, 0.4557, 0.6642, 0.6113, 0.3417, 0.1286]), tensor([0.8712, 0.1962, 0.4816, 0.9845, 0.3890, 0.0111, 0.7675]), tensor([0.2907, 0.3696, 0.2369, 0.0256, 0.9668, 0.9853, 0.8068]), tensor([0.1080, 0.0324, 0.1782, 0.5768, 0.5307, 0.1260, 0.5332]), tensor([0.6732, 0.3975, 0.9520, 0.1769, 0.4022, 0.7322, 0.9617]), tensor([0.9194, 0.1302, 0.0570, 0.0649, 0.3139, 0.9379, 0.4866]), tensor([0.8421, 0.1348, 0.9382, 0.4905, 0.2630, 0.9375, 0.2058]), tensor([0.5521, 0.8481, 0.5731, 0.4758, 0.7025, 0.2607, 0.4315]), tensor([0.1707, 0.3369, 0.7725, 0.9082, 0.6246, 0.0042, 0.6656]), tensor([0.2328, 0.8487, 0.4335, 0.2030, 0.8937, 0.8101, 0.9543]), tensor([0.6416, 0.3715, 0.5111, 0.8248, 0.2741, 0.6293, 0.2519]), tensor([0.6774, 0.4762, 0.0023, 0.8880, 0.3402, 0.6178, 0.9364]), tensor([0.1212, 0.1639, 0.1970, 0.5269, 0.1974, 0.6327, 0.6800]), tensor([0.2198, 0.2327, 0.2852, 0.9024, 0.6653, 0.8046, 0.5992]), tensor([0.2521, 0.1091, 0.2688, 0.4921, 0.2983, 0.4158, 0.5709]), tensor([0.5168, 0.9167, 0.2752, 0.2921, 0.8736, 0.3474, 0.7637]), tensor([0.1869, 0.3965, 0.0745, 0.8021, 0.0111, 0.9812, 0.5812]), tensor([0.1731, 0.6046, 0.2753, 0.9097, 0.7335, 0.2173, 0.4231]), tensor([0.9442, 0.9164, 0.7033, 0.5538, 0.7833, 0.2412, 0.7463]), tensor([0.7419, 0.3334, 0.9490, 0.0969, 0.9520, 0.4558, 0.8976]), tensor([0.4154, 0.6702, 0.5698, 0.2384, 0.5818, 0.6171, 0.2261]), tensor([0.8594, 0.5569, 0.3642, 0.2708, 0.3282, 0.0368, 0.7255]), tensor([0.3797, 0.0259, 0.2920, 0.9560, 0.3199, 0.6283, 0.3846]), tensor([0.3247, 0.9152, 0.7447, 0.5795, 0.3412, 0.0481, 0.3997]), tensor([0.5546, 0.7411, 0.4035, 0.8437, 0.5881, 0.0502, 0.1755]), tensor([0.3626, 0.6798, 0.0197, 0.6948, 0.3708, 0.9818, 0.6789]), tensor([0.8297, 0.0775, 0.6721, 0.1689, 0.2234, 0.4693, 0.8554]), tensor([0.7210, 0.3261, 0.9685, 0.3540, 0.9489, 0.7170, 0.2589]), tensor([0.0444, 0.6328, 0.4594, 0.9376, 0.3218, 0.3578, 0.5369]), tensor([0.3035, 0.8156, 0.5025, 0.9527, 0.0968, 0.4742, 0.9720])], 'joint_vel_trajectory': [tensor([0.2666, 0.5859, 0.2377, 0.9685, 0.4290, 0.8348, 0.1982]), tensor([0.4972, 0.8708, 0.1698, 0.8364, 0.5074, 0.0772, 0.7137]), tensor([0.1035, 0.1903, 0.5903, 0.1885, 0.8856, 0.4949, 0.9697]), tensor([0.9700, 0.8201, 0.8927, 0.8163, 0.4781, 0.5590, 0.6460]), tensor([0.1246, 0.3844, 0.6976, 0.7809, 0.9607, 0.9805, 0.2287]), tensor([0.3263, 0.8260, 0.1249, 0.6788, 0.2594, 0.8569, 0.9952]), tensor([0.9901, 0.0361, 0.7197, 0.1401, 0.1205, 0.3459, 0.5412]), tensor([0.3295, 0.0871, 0.3336, 0.1926, 0.5496, 0.7624, 0.0908]), tensor([0.8389, 0.2765, 0.0914, 0.4614, 0.0699, 0.9843, 0.7375]), tensor([0.4042, 0.8118, 0.1295, 0.9805, 0.5100, 0.3855, 0.2490]), tensor([0.7690, 0.0209, 0.3316, 0.5019, 0.5804, 0.1723, 0.5109]), tensor([0.5560, 0.7463, 0.1250, 0.1857, 0.2024, 0.7457, 0.0417]), tensor([0.6042, 0.4283, 0.6847, 0.5160, 0.9015, 0.4385, 0.5907]), tensor([0.1650, 0.5282, 0.5845, 0.3894, 0.7429, 0.9726, 0.4274]), tensor([0.8000, 0.4448, 0.6482, 0.3269, 0.1948, 0.5189, 0.5090]), tensor([0.2767, 0.0171, 0.3260, 0.4390, 0.6487, 0.8751, 0.2699]), tensor([0.7276, 0.0727, 0.0173, 0.6964, 0.5083, 0.4817, 0.6561]), tensor([0.1199, 0.3791, 0.9912, 0.2188, 0.9775, 0.2146, 0.3713]), tensor([0.4257, 0.5693, 0.0935, 0.2741, 0.3267, 0.4627, 0.6875]), tensor([0.2719, 0.1812, 0.1058, 0.6800, 0.5051, 0.1673, 0.0117]), tensor([0.1997, 0.2070, 0.4754, 0.0318, 0.3652, 0.4785, 0.4788]), tensor([0.5392, 0.1235, 0.9391, 0.2643, 0.7843, 0.1210, 0.4555]), tensor([0.5036, 0.7456, 0.1794, 0.7794, 0.7365, 0.0458, 0.7991]), tensor([0.8910, 0.9260, 0.0101, 0.9098, 0.5168, 0.8280, 0.3655]), tensor([0.2470, 0.3487, 0.3859, 0.1373, 0.1583, 0.5112, 0.7423]), tensor([0.9098, 0.0872, 0.9718, 0.5589, 0.8809, 0.9720, 0.3705]), tensor([0.6281, 0.6284, 0.4772, 0.2063, 0.3019, 0.1355, 0.1539]), tensor([0.9984, 0.7619, 0.8778, 0.8411, 0.8918, 0.8489, 0.4743]), tensor([0.5864, 0.2460, 0.4333, 0.0514, 0.0488, 0.0922, 0.9897]), tensor([0.3098, 0.1146, 0.2934, 0.7483, 0.9267, 0.0825, 0.4117]), tensor([0.2808, 0.6806, 0.8235, 0.7797, 0.6060, 0.7114, 0.6567]), tensor([0.6170, 0.8515, 0.8664, 0.3287, 0.4417, 0.0024, 0.9090]), tensor([0.3824, 0.8833, 0.2193, 0.0142, 0.3916, 0.7276, 0.6749]), tensor([0.8560, 0.7158, 0.8297, 0.0628, 0.1260, 0.3348, 0.9199]), tensor([0.2752, 0.5803, 0.8472, 0.8842, 0.1101, 0.9715, 0.8769]), tensor([0.0794, 0.4154, 0.2638, 0.0608, 0.6444, 0.5175, 0.0174]), tensor([0.2266, 0.8927, 0.4866, 0.8668, 0.2412, 0.1183, 0.7155]), tensor([0.0406, 0.5415, 0.1239, 0.0366, 0.8093, 0.2349, 0.9602]), tensor([0.6628, 0.0764, 0.4430, 0.2760, 0.2687, 0.5607, 0.4138]), tensor([0.8628, 0.1047, 0.5241, 0.8854, 0.5055, 0.9035, 0.7673]), tensor([0.6431, 0.9972, 0.0658, 0.1215, 0.3962, 0.1548, 0.1357]), tensor([0.6842, 0.5776, 0.8199, 0.8026, 0.6283, 0.7110, 0.0196]), tensor([0.2358, 0.8230, 0.7341, 0.1074, 0.4066, 0.5872, 0.7003]), tensor([0.3617, 0.6991, 0.8436, 0.6777, 0.3304, 0.3115, 0.3891]), tensor([0.8453, 0.7564, 0.7477, 0.8798, 0.2866, 0.8680, 0.0061]), tensor([0.4559, 0.3150, 0.3191, 0.7717, 0.4740, 0.3583, 0.3184]), tensor([0.5629, 0.5265, 0.4689, 0.3087, 0.2788, 0.7214, 0.8953]), tensor([0.9056, 0.6457, 0.4607, 0.5204, 0.5833, 0.9442, 0.2173]), tensor([0.8838, 0.7508, 0.8032, 0.4187, 0.9252, 0.3196, 0.7666]), tensor([0.0800, 0.1276, 0.2193, 0.5184, 0.9740, 0.0964, 0.3984]), tensor([0.1857, 0.9576, 0.8553, 0.6780, 0.0121, 0.1545, 0.1132]), tensor([0.5800, 0.9229, 0.1587, 0.9651, 0.9553, 0.8462, 0.6928]), tensor([0.6936, 0.0247, 0.4349, 0.6871, 0.4229, 0.9812, 0.4562]), tensor([0.6051, 0.1183, 0.1120, 0.8607, 0.9971, 0.3463, 0.7503]), tensor([0.2890, 0.2038, 0.7769, 0.8283, 0.4783, 0.6354, 0.5011]), tensor([0.7512, 0.5936, 0.7079, 0.8241, 0.9879, 0.2962, 0.5865]), tensor([0.2951, 0.3395, 0.4351, 0.6704, 0.0081, 0.7099, 0.8890]), tensor([0.0044, 0.3531, 0.8248, 0.5022, 0.0145, 0.6571, 0.9106]), tensor([0.3558, 0.7405, 0.4515, 0.3708, 0.6997, 0.5340, 0.7963]), tensor([0.5697, 0.9169, 0.3713, 0.2810, 0.0764, 0.7691, 0.2760])], 'Kp': tensor([[0.4123, 0.2714, 0.1076, 0.7344, 0.6952, 0.2783, 0.0123],\n        [0.0324, 0.4515, 0.2744, 0.4770, 0.5749, 0.0172, 0.4486],\n        [0.8576, 0.4319, 0.6890, 0.5091, 0.7165, 0.5081, 0.3288],\n        [0.6543, 0.0548, 0.3382, 0.6116, 0.0903, 0.5292, 0.7605],\n        [0.7072, 0.6678, 0.8949, 0.5379, 0.6050, 0.5280, 0.3873],\n        [0.2754, 0.1534, 0.8296, 0.0426, 0.0631, 0.6740, 0.0396],\n        [0.5344, 0.9870, 0.0375, 0.0443, 0.0783, 0.0179, 0.4248]]), 'Kd': tensor([[0.8540, 0.7398, 0.7602, 0.5758, 0.3917, 0.3543, 0.2871],\n        [0.8541, 0.3547, 0.0316, 0.2077, 0.3777, 0.9373, 0.7800],\n        [0.6092, 0.3000, 0.3420, 0.0731, 0.5623, 0.8382, 0.0255],\n        [0.7359, 0.8603, 0.9209, 0.3133, 0.7427, 0.7324, 0.6947],\n        [0.8773, 0.7597, 0.8168, 0.3082, 0.4439, 0.3520, 0.4265],\n        [0.8360, 0.4337, 0.8009, 0.1486, 0.7768, 0.9504, 0.5524],\n        [0.2902, 0.6834, 0.0555, 0.7115, 0.2824, 0.2300, 0.6161]]), 'robot_model': RobotModelPinocchio(), 'ignore_gravity': True}",
                "True",
                "None"
            ],
            [
                "<class 'torchcontrol.policies.trajectory.EndEffectorTrajectoryExecutor'>",
                "{'ee_pose_trajectory': [TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.3570, 0.1409, 0.3343, 0.8607])), \n\ttranslation=tensor([0.6491, 0.7640, 0.3387])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.4071, 0.3706, 0.4220, 0.7203])), \n\ttranslation=tensor([0.6113, 0.6001, 0.7929])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.4325, 0.1742, 0.3525, 0.8114])), \n\ttranslation=tensor([0.3035, 0.2881, 0.3712])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.3908, 0.3012, 0.3999, 0.7724])), \n\ttranslation=tensor([0.3330, 0.7246, 0.3128])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.1004, 0.2512, 0.0351, 0.9621])), \n\ttranslation=tensor([0.9055, 0.3229, 0.4892])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.3630, 0.2562, 0.0288, 0.8954])), \n\ttranslation=tensor([0.1407, 0.4712, 0.5900])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.0679, 0.1742, 0.0113, 0.9823])), \n\ttranslation=tensor([0.4204, 0.2686, 0.9945])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.0197, 0.1980, 0.3780, 0.9042])), \n\ttranslation=tensor([0.2362, 0.7416, 0.9633])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.2253, 0.0419, 0.4178, 0.8791])), \n\ttranslation=tensor([0.4827, 0.8312, 0.9078])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.2434, 0.3273, 0.1426, 0.9018])), \n\ttranslation=tensor([0.4246, 0.0664, 0.1770])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.0733, 0.1980, 0.2374, 0.9482])), \n\ttranslation=tensor([0.1173, 0.4002, 0.0118])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.1405, 0.0534, 0.4100, 0.8996])), \n\ttranslation=tensor([0.6440, 0.7481, 0.8026])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.2606, 0.1639, 0.2838, 0.9081])), \n\ttranslation=tensor([0.7303, 0.8751, 0.9587])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.1363, 0.3894, 0.4316, 0.8022])), \n\ttranslation=tensor([0.3961, 0.3366, 0.0881])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.0559, 0.3955, 0.0259, 0.9164])), \n\ttranslation=tensor([0.4934, 0.8530, 0.6692])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.1380, 0.1790, 0.3391, 0.9132])), \n\ttranslation=tensor([0.3534, 0.6227, 0.0432])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.4395, 0.1506, 0.0518, 0.8840])), \n\ttranslation=tensor([0.2068, 0.5694, 0.1582])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.1995, 0.0994, 0.3435, 0.9123])), \n\ttranslation=tensor([0.6734, 0.0770, 0.9883])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.1231, 0.4510, 0.0503, 0.8826])), \n\ttranslation=tensor([0.7764, 0.8811, 0.7574])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.2667, 0.0506, 0.0768, 0.9594])), \n\ttranslation=tensor([0.0430, 0.6321, 0.7772])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.2240, 0.0412, 0.3390, 0.9128])), \n\ttranslation=tensor([0.3896, 0.1639, 0.7870])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.4149, 0.1615, 0.4590, 0.7688])), \n\ttranslation=tensor([0.2359, 0.3991, 0.5379])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.4045, 0.0035, 0.0730, 0.9116])), \n\ttranslation=tensor([0.1963, 0.0662, 0.4716])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.3398, 0.3451, 0.2900, 0.8254])), \n\ttranslation=tensor([0.4731, 0.0518, 0.8990])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.2663, 0.2764, 0.1229, 0.9152])), \n\ttranslation=tensor([0.7729, 0.7208, 0.6063])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.4136, 0.1561, 0.0171, 0.8968])), \n\ttranslation=tensor([0.0620, 0.6682, 0.8703])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.3044, 0.1693, 0.3347, 0.8756])), \n\ttranslation=tensor([0.9060, 0.8134, 0.2918])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.2626, 0.4585, 0.2734, 0.8038])), \n\ttranslation=tensor([0.3049, 0.9000, 0.6623])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.0566, 0.0654, 0.3532, 0.9315])), \n\ttranslation=tensor([0.9439, 0.2970, 0.0405])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.1781, 0.2371, 0.0797, 0.9517])), \n\ttranslation=tensor([0.0569, 0.8084, 0.8850])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.2825, 0.0588, 0.4485, 0.8460])), \n\ttranslation=tensor([0.4620, 0.5279, 0.6580])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.4300, 0.0552, 0.1236, 0.8926])), \n\ttranslation=tensor([0.8585, 0.6761, 0.2111])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.3237, 0.3919, 0.2381, 0.8276])), \n\ttranslation=tensor([0.6333, 0.6209, 0.2235])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.2042, 0.3640, 0.0739, 0.9057])), \n\ttranslation=tensor([0.1207, 0.5575, 0.2174])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.0234, 0.1438, 0.2750, 0.9503])), \n\ttranslation=tensor([0.0900, 0.0535, 0.9789])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.1583, 0.3723, 0.2563, 0.8779])), \n\ttranslation=tensor([0.9549, 0.7907, 0.1122])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.1076, 0.2275, 0.4546, 0.8544])), \n\ttranslation=tensor([0.3475, 0.6796, 0.0861])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.1031, 0.3086, 0.2992, 0.8970])), \n\ttranslation=tensor([0.5694, 0.5017, 0.1002])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.1602, 0.2064, 0.4248, 0.8668])), \n\ttranslation=tensor([0.1062, 0.3972, 0.2831])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.0050, 0.0504, 0.3160, 0.9474])), \n\ttranslation=tensor([0.1058, 0.7345, 0.9246])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.3307, 0.1417, 0.4061, 0.8400])), \n\ttranslation=tensor([0.8421, 0.7179, 0.8206])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.3098, 0.3430, 0.3209, 0.8267])), \n\ttranslation=tensor([0.6523, 0.3606, 0.4030])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.2193, 0.4033, 0.3692, 0.8080])), \n\ttranslation=tensor([0.0494, 0.2292, 0.6039])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.2933, 0.0440, 0.3716, 0.8798])), \n\ttranslation=tensor([0.4760, 0.6800, 0.9506])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.4253, 0.3608, 0.2253, 0.7989])), \n\ttranslation=tensor([0.4801, 0.9194, 0.9220])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.3625, 0.0290, 0.2866, 0.8863])), \n\ttranslation=tensor([0.8583, 0.0662, 0.0266])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.2852, 0.3802, 0.2436, 0.8455])), \n\ttranslation=tensor([0.0430, 0.6653, 0.3271])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.0097, 0.1690, 0.0582, 0.9839])), \n\ttranslation=tensor([0.8863, 0.0539, 0.1142])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.0276, 0.1501, 0.2569, 0.9543])), \n\ttranslation=tensor([0.7495, 0.6000, 0.4857])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.1197, 0.2485, 0.3863, 0.8802])), \n\ttranslation=tensor([0.5248, 0.4964, 0.4711])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.2500, 0.2315, 0.4281, 0.8370])), \n\ttranslation=tensor([0.5722, 0.9669, 0.7262])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.3768, 0.2484, 0.3855, 0.8048])), \n\ttranslation=tensor([0.9675, 0.1650, 0.3371])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.3078, 0.0487, 0.0939, 0.9455])), \n\ttranslation=tensor([0.3070, 0.8785, 0.2037])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.2172, 0.0359, 0.4432, 0.8690])), \n\ttranslation=tensor([0.9855, 0.6736, 0.8106])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.4194, 0.2761, 0.2767, 0.8193])), \n\ttranslation=tensor([0.7366, 0.1213, 0.8794])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.2215, 0.4536, 0.4127, 0.7582])), \n\ttranslation=tensor([0.0635, 0.9479, 0.1662])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.3910, 0.2056, 0.1366, 0.8867])), \n\ttranslation=tensor([0.8604, 0.4001, 0.9238])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.2933, 0.3087, 0.2937, 0.8558])), \n\ttranslation=tensor([0.7897, 0.8732, 0.5135])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.4283, 0.0733, 0.0074, 0.9006])), \n\ttranslation=tensor([0.3369, 0.2663, 0.3625])\n), TransformationObj(\n\trotation=RotationObj(quaternion=tensor([0.1733, 0.2516, 0.1536, 0.9397])), \n\ttranslation=tensor([0.1766, 0.5901, 0.4360])\n)], 'ee_twist_trajectory': [tensor([0.2841, 0.9408, 0.8406, 0.4588, 0.1658, 0.7107]), tensor([0.4802, 0.9064, 0.2474, 0.2437, 0.6258, 0.4451]), tensor([0.2138, 0.6886, 0.2195, 0.7635, 0.0367, 0.1125]), tensor([0.4368, 0.8607, 0.3973, 0.4518, 0.4087, 0.9732]), tensor([0.5340, 0.3237, 0.1498, 0.7366, 0.0057, 0.9835]), tensor([0.3183, 0.2049, 0.1909, 0.0923, 0.3069, 0.4767]), tensor([0.9802, 0.2240, 0.7212, 0.3981, 0.6267, 0.8387]), tensor([0.8881, 0.9369, 0.9203, 0.4193, 0.0321, 0.8947]), tensor([0.7487, 0.3211, 0.0158, 0.0258, 0.8477, 0.7151]), tensor([0.4704, 0.7183, 0.8712, 0.7623, 0.8343, 0.6478]), tensor([0.5356, 0.2744, 0.5534, 0.4780, 0.2833, 0.1610]), tensor([0.6226, 0.0933, 0.5893, 0.1072, 0.0972, 0.2768]), tensor([0.0127, 0.3495, 0.0729, 0.8227, 0.3313, 0.3939]), tensor([0.2302, 0.5270, 0.0693, 0.4322, 0.2727, 0.7833]), tensor([0.7199, 0.2616, 0.8736, 0.9389, 0.4054, 0.8021]), tensor([0.0494, 0.1406, 0.9076, 0.3890, 0.3482, 0.3445]), tensor([0.0331, 0.2093, 0.1372, 0.5696, 0.4728, 0.9328]), tensor([0.6013, 0.8787, 0.5279, 0.9311, 0.0480, 0.2826]), tensor([0.7374, 0.7484, 0.1202, 0.9075, 0.9938, 0.0916]), tensor([0.9057, 0.5773, 0.2782, 0.3323, 0.1219, 0.3078]), tensor([0.1276, 0.6263, 0.1119, 0.2826, 0.5925, 0.9265]), tensor([0.3418, 0.3964, 0.0282, 0.9359, 0.6158, 0.8949]), tensor([0.6412, 0.9135, 0.4550, 0.9511, 0.3280, 0.4677]), tensor([0.9652, 0.1656, 0.8126, 0.5421, 0.8543, 0.3489]), tensor([0.5633, 0.5145, 0.6411, 0.7348, 0.7954, 0.5166]), tensor([0.4402, 0.2764, 0.7206, 0.7616, 0.7606, 0.9676]), tensor([0.0562, 0.2506, 0.3970, 0.6447, 0.8340, 0.0133]), tensor([0.9823, 0.6759, 0.9351, 0.6434, 0.5304, 0.0411]), tensor([0.5328, 0.2483, 0.2393, 0.8560, 0.6096, 0.6530]), tensor([0.8395, 0.9470, 0.1677, 0.7520, 0.9240, 0.0784]), tensor([0.0428, 0.6875, 0.6474, 0.9337, 0.7244, 0.6976]), tensor([0.6367, 0.3301, 0.1591, 0.5218, 0.2270, 0.0753]), tensor([0.9562, 0.4569, 0.5112, 0.3346, 0.7130, 0.7713]), tensor([0.0911, 0.8318, 0.1575, 0.0943, 0.7453, 0.8210]), tensor([0.2382, 0.5935, 0.3234, 0.5043, 0.8744, 0.9575]), tensor([0.7040, 0.7202, 0.1457, 0.6152, 0.8797, 0.9495]), tensor([0.2331, 0.8660, 0.1117, 0.9415, 0.9535, 0.9715]), tensor([0.7031, 0.4677, 0.7499, 0.3501, 0.4031, 0.5271]), tensor([0.8626, 0.3325, 0.3148, 0.0773, 0.0333, 0.9535]), tensor([0.1316, 0.8484, 0.5521, 0.4242, 0.2781, 0.9687]), tensor([0.9498, 0.2866, 0.3771, 0.4161, 0.1947, 0.8599]), tensor([0.0151, 0.1897, 0.5506, 0.1757, 0.8093, 0.7702]), tensor([0.6368, 0.6223, 0.4762, 0.4696, 0.3842, 0.8078]), tensor([0.9721, 0.2986, 0.7360, 0.4932, 0.5370, 0.2835]), tensor([0.1497, 0.7434, 0.7691, 0.9712, 0.8140, 0.6698]), tensor([0.4046, 0.1884, 0.1639, 0.2334, 0.3923, 0.0768]), tensor([0.7005, 0.1229, 0.7568, 0.3106, 0.3697, 0.7733]), tensor([0.8916, 0.2435, 0.3485, 0.8753, 0.5518, 0.4258]), tensor([0.6402, 0.8841, 0.6286, 0.9747, 0.8655, 0.0401]), tensor([0.6418, 0.9231, 0.7098, 0.3713, 0.1898, 0.5775]), tensor([0.4648, 0.7371, 0.6267, 0.7690, 0.5851, 0.8925]), tensor([0.3107, 0.3762, 0.4632, 0.7175, 0.5659, 0.9812]), tensor([0.5115, 0.1608, 0.1132, 0.5889, 0.3032, 0.5582]), tensor([0.9269, 0.9695, 0.9580, 0.6302, 0.1196, 0.2709]), tensor([0.0426, 0.0417, 0.2720, 0.0432, 0.0599, 0.9709]), tensor([0.1779, 0.9787, 0.1857, 0.0182, 0.4174, 0.7598]), tensor([0.1918, 0.4917, 0.9471, 0.1023, 0.5379, 0.8532]), tensor([0.1291, 0.0564, 0.4164, 0.1260, 0.5928, 0.5356]), tensor([0.8015, 0.9015, 0.3673, 0.1697, 0.6369, 0.9667]), tensor([0.4295, 0.1695, 0.7120, 0.0892, 0.5542, 0.0476])], 'Kp': tensor([[0.6491, 0.1218, 0.1920, 0.3707, 0.3434, 0.1095],\n        [0.7441, 0.6067, 0.4092, 0.1361, 0.4314, 0.7347],\n        [0.5490, 0.0834, 0.9509, 0.7362, 0.5000, 0.5896],\n        [0.0229, 0.3873, 0.8136, 0.2776, 0.8524, 0.4909],\n        [0.9324, 0.4960, 0.2579, 0.9376, 0.5510, 0.6883],\n        [0.5509, 0.4040, 0.8557, 0.8574, 0.3275, 0.9904]]), 'Kd': tensor([[0.6313, 0.3169, 0.9431, 0.3533, 0.9384, 0.0507],\n        [0.9363, 0.1870, 0.2976, 0.2855, 0.8024, 0.4873],\n        [0.1232, 0.5765, 0.9669, 0.0163, 0.3670, 0.5340],\n        [0.3777, 0.7607, 0.3152, 0.6121, 0.1340, 0.9085],\n        [0.3305, 0.1964, 0.4693, 0.3260, 0.7845, 0.9852],\n        [0.6581, 0.0097, 0.3449, 0.5390, 0.3796, 0.8221]]), 'robot_model': RobotModelPinocchio(), 'ignore_gravity': True}",
                "True",
                "None"
            ],
            [
                "<class 'torchcontrol.policies.trajectory.iLQR'>",
                "{'Kxs': tensor([[[0.7897, 0.1471, 0.0735,  ..., 0.6917, 0.3757, 0.8722],\n         [0.2346, 0.6484, 0.1410,  ..., 0.3370, 0.1359, 0.6749],\n         [0.1650, 0.4287, 0.6585,  ..., 0.0267, 0.9681, 0.0407],\n         ...,\n         [0.7472, 0.6755, 0.5913,  ..., 0.7718, 0.1707, 0.7516],\n         [0.5039, 0.6829, 0.0997,  ..., 0.3882, 0.2100, 0.3248],\n         [0.6764, 0.9497, 0.8263,  ..., 0.5867, 0.4754, 0.7516]],\n\n        [[0.6183, 0.7266, 0.2899,  ..., 0.9888, 0.3072, 0.8293],\n         [0.9753, 0.4230, 0.9619,  ..., 0.0849, 0.6860, 0.3236],\n         [0.5107, 0.5656, 0.6531,  ..., 0.3145, 0.4575, 0.7016],\n         ...,\n         [0.8047, 0.7433, 0.9519,  ..., 0.2328, 0.8190, 0.1447],\n         [0.6260, 0.4898, 0.4168,  ..., 0.4124, 0.0461, 0.5038],\n         [0.1015, 0.6731, 0.5258,  ..., 0.0751, 0.5226, 0.0085]],\n\n        [[0.3747, 0.3138, 0.3379,  ..., 0.9364, 0.2076, 0.0012],\n         [0.9900, 0.3159, 0.9669,  ..., 0.0244, 0.6026, 0.4350],\n         [0.9898, 0.6899, 0.4406,  ..., 0.4376, 0.2489, 0.3402],\n         ...,\n         [0.8987, 0.8403, 0.9332,  ..., 0.8187, 0.7760, 0.3534],\n         [0.4288, 0.4363, 0.0587,  ..., 0.6187, 0.8723, 0.4060],\n         [0.1701, 0.3064, 0.5403,  ..., 0.2965, 0.1819, 0.2511]],\n\n        ...,\n\n        [[0.4864, 0.1766, 0.1800,  ..., 0.2117, 0.3169, 0.6917],\n         [0.3822, 0.8135, 0.6013,  ..., 0.0486, 0.5083, 0.8505],\n         [0.0813, 0.3568, 0.0410,  ..., 0.0615, 0.3605, 0.0522],\n         ...,\n         [0.9119, 0.5633, 0.3616,  ..., 0.9108, 0.1962, 0.8636],\n         [0.2585, 0.1146, 0.2342,  ..., 0.8123, 0.3803, 0.3958],\n         [0.6010, 0.0896, 0.4598,  ..., 0.8054, 0.2654, 0.3244]],\n\n        [[0.2487, 0.3800, 0.1698,  ..., 0.5198, 0.7786, 0.3680],\n         [0.9815, 0.7706, 0.2375,  ..., 0.5909, 0.5056, 0.5693],\n         [0.2302, 0.0081, 0.6619,  ..., 0.4797, 0.6886, 0.1066],\n         ...,\n         [0.1547, 0.4383, 0.3320,  ..., 0.2387, 0.7841, 0.6137],\n         [0.3711, 0.8100, 0.9307,  ..., 0.7860, 0.1276, 0.4744],\n         [0.6240, 0.2253, 0.4770,  ..., 0.2013, 0.0182, 0.6044]],\n\n        [[0.4351, 0.6691, 0.3906,  ..., 0.2742, 0.8043, 0.4809],\n         [0.3212, 0.4135, 0.4371,  ..., 0.3113, 0.0403, 0.8333],\n         [0.7509, 0.7182, 0.2024,  ..., 0.2976, 0.0371, 0.4701],\n         ...,\n         [0.5938, 0.1318, 0.6295,  ..., 0.0018, 0.2498, 0.6281],\n         [0.3639, 0.7350, 0.9195,  ..., 0.1481, 0.5074, 0.3928],\n         [0.8655, 0.2494, 0.1909,  ..., 0.5495, 0.2234, 0.6496]]]), 'x_desireds': tensor([[4.2003e-01, 4.4707e-01, 6.7041e-02, 8.7648e-01, 6.0966e-01, 3.2712e-01,\n         3.8294e-02, 2.7316e-01, 9.3677e-01, 5.5287e-01, 8.3013e-01, 3.4249e-01,\n         1.7670e-01, 3.6128e-01],\n        [8.3953e-01, 3.7901e-02, 8.2287e-01, 4.6093e-01, 9.0574e-01, 1.2915e-01,\n         1.3833e-01, 7.5464e-01, 9.0020e-01, 7.0166e-02, 6.4068e-01, 4.9491e-01,\n         8.8693e-01, 7.4008e-01],\n        [6.3605e-01, 8.7043e-01, 3.3812e-01, 6.5697e-01, 1.5026e-04, 2.3092e-01,\n         9.6921e-01, 9.4482e-01, 1.1460e-01, 6.9511e-01, 2.9909e-01, 6.4121e-01,\n         1.4911e-01, 9.5702e-01],\n        [6.2344e-01, 6.1863e-01, 8.3392e-01, 7.8062e-01, 5.0677e-01, 8.8915e-01,\n         3.7706e-01, 1.0332e-01, 8.6493e-01, 2.2794e-01, 3.4944e-01, 5.8112e-01,\n         8.8365e-01, 6.4163e-01],\n        [3.6528e-01, 5.0226e-01, 9.6823e-01, 3.9872e-01, 6.0389e-01, 6.0914e-01,\n         4.0110e-01, 1.2168e-01, 8.6777e-01, 2.8202e-01, 8.6152e-02, 5.1146e-02,\n         7.0114e-01, 3.1227e-01],\n        [9.3170e-01, 5.9249e-01, 4.1191e-01, 1.8448e-02, 2.3006e-01, 9.1946e-01,\n         1.9753e-01, 6.4723e-01, 1.0268e-01, 3.0679e-01, 2.1128e-01, 9.0164e-01,\n         1.1382e-01, 8.5640e-01],\n        [6.7829e-01, 1.8683e-01, 2.1541e-01, 4.3826e-01, 1.4820e-01, 6.2343e-01,\n         7.6896e-01, 3.6013e-01, 8.2631e-01, 4.9650e-01, 6.9769e-02, 1.8115e-01,\n         7.5905e-01, 7.6187e-01],\n        [4.3425e-01, 9.2714e-01, 8.4167e-01, 8.1684e-01, 2.3397e-01, 9.6151e-01,\n         8.6610e-01, 5.0298e-01, 3.8682e-01, 8.8758e-01, 9.0975e-01, 3.0514e-01,\n         8.6978e-01, 3.2695e-01],\n        [4.6544e-01, 4.9893e-01, 2.4320e-01, 9.7055e-02, 3.5860e-01, 9.5392e-01,\n         3.4687e-01, 4.7480e-01, 9.8415e-01, 6.0258e-01, 4.1044e-01, 9.3807e-01,\n         4.3678e-01, 4.1172e-01],\n        [6.8358e-01, 1.7004e-01, 9.6525e-01, 6.8237e-01, 7.3009e-02, 7.7180e-01,\n         1.7176e-01, 1.5008e-02, 1.1394e-01, 6.5170e-01, 7.8758e-02, 5.0651e-01,\n         8.7572e-01, 7.9620e-01],\n        [8.4329e-02, 2.3741e-01, 1.4175e-01, 4.3646e-03, 2.9998e-01, 9.2205e-01,\n         5.4708e-01, 9.1971e-01, 4.0809e-01, 6.7163e-02, 9.4974e-01, 5.8075e-01,\n         2.1254e-01, 5.5915e-01],\n        [8.9904e-01, 6.7914e-01, 2.4490e-01, 8.5474e-01, 6.5343e-01, 4.0738e-01,\n         1.2433e-01, 1.6816e-01, 5.9782e-01, 1.1472e-01, 2.4426e-01, 7.3923e-01,\n         1.1251e-01, 8.9434e-01],\n        [8.6899e-01, 2.3712e-01, 9.3090e-01, 9.9848e-01, 5.1757e-01, 8.9839e-01,\n         8.8105e-01, 9.3413e-01, 8.5008e-01, 2.1298e-01, 2.0784e-01, 6.1299e-01,\n         8.1265e-02, 7.2167e-01],\n        [9.7908e-01, 8.9739e-01, 7.3311e-01, 7.1227e-01, 7.4531e-01, 6.2844e-01,\n         1.0664e-01, 4.1074e-01, 8.4367e-01, 4.9501e-01, 5.2557e-01, 3.2406e-01,\n         1.4896e-01, 8.9295e-01],\n        [6.5273e-01, 5.0630e-01, 5.8882e-01, 3.0431e-01, 2.9134e-01, 8.6328e-01,\n         4.3743e-01, 6.6051e-01, 4.3204e-01, 3.7362e-01, 6.5783e-01, 8.4904e-01,\n         7.7509e-01, 5.6082e-01],\n        [7.0741e-01, 7.2231e-01, 3.0744e-01, 3.7022e-01, 1.8100e-01, 4.9075e-01,\n         1.9986e-01, 6.1751e-01, 7.7890e-01, 2.3916e-01, 6.0791e-01, 4.1939e-01,\n         6.0089e-01, 2.6307e-01],\n        [4.4176e-01, 6.1587e-01, 6.0638e-01, 1.6531e-01, 2.3179e-01, 9.3224e-01,\n         9.8643e-01, 5.1352e-01, 4.1802e-01, 1.9094e-01, 6.1066e-01, 6.3986e-02,\n         7.7820e-01, 5.0129e-01],\n        [8.0304e-01, 5.8955e-01, 3.5859e-01, 1.5257e-02, 2.2100e-02, 9.6553e-02,\n         4.2102e-01, 4.9921e-01, 5.5135e-01, 6.3709e-01, 3.2145e-01, 5.6042e-02,\n         3.5313e-01, 5.2005e-01],\n        [2.6307e-01, 2.2773e-01, 8.3197e-01, 1.7084e-01, 6.7918e-01, 3.0089e-01,\n         4.4908e-01, 1.1418e-01, 2.7696e-01, 6.3913e-01, 3.6713e-02, 9.6172e-01,\n         8.0416e-01, 2.5606e-01],\n        [9.4935e-01, 6.9715e-01, 4.9663e-01, 6.9708e-01, 3.0264e-01, 4.4175e-01,\n         5.0544e-01, 2.9097e-01, 4.8095e-01, 8.7744e-01, 8.9288e-02, 8.5163e-01,\n         7.7575e-01, 8.0424e-02],\n        [5.2425e-01, 8.9862e-01, 4.1368e-01, 1.1934e-01, 2.8821e-01, 5.1244e-01,\n         2.6409e-01, 8.1197e-01, 2.4903e-01, 2.6701e-01, 6.9160e-01, 9.3623e-01,\n         2.9078e-02, 8.6860e-01],\n        [3.2809e-01, 5.9962e-01, 9.4520e-01, 5.8127e-01, 1.0820e-01, 7.8029e-01,\n         1.5562e-01, 5.0611e-02, 5.2105e-01, 1.7058e-01, 6.2476e-01, 6.6440e-01,\n         7.2858e-01, 6.9679e-01],\n        [6.2388e-01, 4.8139e-01, 2.3220e-01, 5.4172e-01, 7.7001e-01, 9.7581e-01,\n         9.8302e-01, 6.2818e-01, 7.8202e-02, 8.5333e-01, 5.0306e-01, 8.7198e-01,\n         5.7517e-02, 8.4038e-01],\n        [2.9794e-01, 6.9537e-01, 6.8618e-01, 4.3101e-01, 5.6322e-01, 4.0856e-01,\n         1.0853e-03, 1.7221e-01, 8.0431e-01, 9.6071e-02, 9.1400e-02, 3.3159e-01,\n         7.1606e-01, 3.9156e-01],\n        [4.2671e-01, 6.5097e-01, 5.4206e-01, 1.8353e-01, 3.2667e-01, 9.9211e-01,\n         9.8068e-01, 7.9669e-02, 6.3985e-01, 6.2298e-01, 8.4864e-01, 7.9325e-01,\n         9.9939e-01, 5.2759e-01],\n        [3.2820e-01, 3.5338e-02, 7.5029e-01, 3.9351e-01, 4.2791e-02, 5.2572e-01,\n         6.7375e-01, 1.0451e-01, 2.5394e-01, 1.0254e-01, 8.9688e-02, 9.5646e-01,\n         6.3757e-01, 3.9994e-01],\n        [7.7546e-01, 7.5166e-01, 7.2742e-01, 3.2160e-01, 5.2121e-02, 1.7936e-01,\n         1.4335e-01, 3.1630e-01, 6.0361e-01, 8.7590e-01, 8.2745e-01, 6.4287e-01,\n         4.1184e-01, 2.5188e-01],\n        [5.5003e-01, 1.9929e-01, 1.0431e-01, 8.2530e-01, 8.7494e-01, 8.3489e-01,\n         9.3769e-01, 9.4778e-01, 1.0287e-01, 7.0251e-01, 7.0985e-02, 3.9101e-01,\n         6.1826e-01, 6.5719e-01],\n        [2.3675e-01, 8.6889e-01, 5.5061e-01, 8.6341e-01, 3.3706e-03, 2.4274e-01,\n         7.7014e-01, 5.0131e-02, 6.5613e-01, 6.0741e-02, 8.9036e-01, 1.4987e-01,\n         8.6532e-01, 3.9655e-02],\n        [9.2053e-01, 3.6390e-01, 4.7634e-01, 5.6423e-01, 4.7357e-01, 6.3425e-01,\n         8.3856e-01, 5.6430e-01, 8.9314e-01, 3.9058e-01, 8.5880e-01, 9.4814e-02,\n         1.3392e-01, 6.7021e-01],\n        [8.0097e-01, 5.2336e-01, 5.8259e-01, 2.0605e-01, 6.6964e-01, 6.8199e-01,\n         8.2718e-01, 3.0904e-01, 6.1889e-01, 4.7383e-01, 8.7732e-01, 8.0847e-01,\n         1.7195e-01, 7.8830e-01],\n        [5.7002e-01, 1.7821e-01, 3.7849e-01, 7.5122e-01, 4.6176e-01, 5.1114e-01,\n         6.7883e-01, 5.5325e-01, 3.1616e-01, 3.2643e-01, 3.8385e-01, 9.4495e-01,\n         3.2603e-01, 5.4559e-01],\n        [9.3970e-01, 1.7551e-01, 5.5708e-01, 5.6032e-01, 5.0830e-01, 9.7755e-01,\n         8.0766e-01, 1.2645e-01, 4.3985e-01, 4.8836e-01, 5.2102e-01, 7.2746e-01,\n         1.0082e-01, 1.1250e-01],\n        [7.3503e-01, 3.4475e-01, 7.7234e-01, 4.0524e-01, 5.6936e-01, 3.8860e-01,\n         3.6865e-01, 2.0269e-01, 1.4781e-01, 1.8175e-01, 1.4739e-01, 8.3980e-01,\n         3.3641e-02, 9.0628e-01],\n        [8.1680e-01, 2.5433e-01, 4.5863e-01, 9.2493e-01, 3.7491e-01, 8.8177e-01,\n         7.2115e-01, 8.6821e-01, 3.2992e-02, 2.7112e-01, 6.3176e-01, 5.3055e-01,\n         9.1212e-01, 5.4648e-01],\n        [3.0702e-01, 5.2073e-01, 3.2047e-01, 9.8547e-01, 6.2334e-01, 4.9891e-01,\n         4.3700e-01, 7.5589e-01, 1.8116e-01, 9.2135e-01, 7.6779e-01, 5.1119e-01,\n         4.4911e-02, 7.8753e-01],\n        [9.2204e-01, 3.4700e-01, 5.4945e-01, 4.1919e-01, 8.3260e-01, 7.3805e-01,\n         5.5527e-01, 1.4701e-01, 8.4227e-01, 1.0313e-01, 9.5012e-01, 7.0649e-01,\n         7.6220e-01, 9.2582e-01],\n        [2.2397e-01, 9.3671e-01, 1.9791e-01, 3.9798e-01, 3.5710e-01, 4.6740e-01,\n         2.1312e-02, 6.9642e-01, 9.2091e-02, 6.9084e-01, 2.0435e-01, 3.4812e-02,\n         4.4179e-01, 6.2055e-01],\n        [5.9980e-01, 8.9515e-01, 6.1008e-01, 3.4225e-01, 5.0563e-01, 7.9590e-01,\n         3.0521e-01, 2.5347e-01, 6.0585e-01, 3.1849e-01, 8.0892e-02, 2.2330e-01,\n         1.1334e-01, 9.0863e-01],\n        [6.5847e-01, 5.2671e-01, 5.7851e-01, 4.9455e-01, 5.7405e-01, 5.0702e-01,\n         9.3828e-01, 4.5589e-01, 4.9269e-02, 1.1028e-01, 9.0940e-01, 5.5186e-01,\n         4.6654e-01, 2.9820e-01],\n        [1.6304e-01, 2.1010e-01, 6.3961e-01, 8.8340e-01, 2.5116e-01, 8.3933e-01,\n         3.5935e-01, 7.5181e-01, 3.8605e-01, 2.7039e-01, 8.4979e-01, 3.5200e-01,\n         5.8955e-02, 8.6577e-01],\n        [8.5659e-01, 2.3831e-01, 2.6246e-01, 5.9679e-01, 6.7248e-01, 2.6016e-02,\n         1.5846e-01, 2.5011e-01, 1.0174e-01, 5.6186e-01, 7.3694e-01, 2.7528e-01,\n         4.8757e-01, 2.6580e-01],\n        [5.4626e-01, 1.7974e-01, 7.6855e-01, 4.5736e-01, 2.4547e-01, 4.8816e-01,\n         5.2083e-01, 4.2987e-01, 7.3258e-03, 2.2435e-01, 9.9820e-01, 2.7795e-01,\n         6.3551e-01, 6.7236e-01],\n        [3.5871e-01, 9.6153e-01, 9.2932e-01, 2.9726e-01, 6.9663e-01, 3.4255e-01,\n         8.5867e-01, 5.4277e-01, 4.2427e-02, 8.2380e-01, 2.6022e-01, 9.2202e-01,\n         1.0742e-01, 6.3393e-01],\n        [5.7391e-03, 8.3325e-01, 2.7765e-02, 5.9996e-01, 6.5977e-01, 2.5671e-01,\n         2.9132e-01, 1.0191e-01, 3.6022e-01, 3.0502e-01, 1.9009e-01, 7.7004e-02,\n         5.8653e-01, 2.6680e-01],\n        [7.7349e-01, 7.3487e-02, 9.8359e-01, 7.4688e-01, 3.3143e-01, 8.8227e-01,\n         5.7553e-01, 2.6110e-01, 2.8306e-01, 3.8956e-01, 7.4063e-01, 5.6178e-01,\n         3.3496e-01, 8.8883e-01],\n        [3.2631e-01, 7.9335e-01, 6.6190e-01, 9.0512e-01, 9.8090e-01, 1.6653e-01,\n         9.2334e-01, 2.3074e-02, 5.6819e-01, 6.5363e-01, 5.0539e-01, 6.5430e-01,\n         8.9297e-01, 7.7476e-01],\n        [5.9015e-01, 5.7675e-01, 2.3123e-01, 7.8704e-01, 7.3273e-01, 3.7809e-01,\n         8.9037e-01, 5.8661e-01, 2.9721e-01, 5.8316e-01, 8.1043e-01, 6.9333e-01,\n         4.6601e-02, 8.5810e-01],\n        [7.7986e-02, 2.9651e-01, 6.8721e-01, 7.5862e-01, 1.9209e-01, 9.0518e-01,\n         2.0590e-01, 3.3050e-01, 8.6235e-01, 5.9781e-01, 1.7490e-01, 8.6772e-01,\n         8.2730e-01, 9.7907e-01],\n        [4.4124e-01, 3.5216e-01, 8.5777e-01, 5.8767e-01, 4.9824e-01, 9.2739e-01,\n         2.5393e-01, 6.4386e-01, 8.5875e-01, 6.3923e-01, 6.4213e-01, 3.8310e-01,\n         6.3951e-01, 8.3045e-01],\n        [5.5786e-01, 4.9704e-01, 6.5170e-01, 9.5843e-01, 3.1206e-01, 1.7890e-01,\n         4.8956e-01, 9.8197e-01, 5.5882e-01, 2.3925e-02, 9.8675e-01, 2.7729e-01,\n         1.6050e-01, 5.7458e-01],\n        [2.8564e-01, 5.2812e-02, 5.7504e-01, 7.7095e-01, 2.6320e-01, 6.1230e-01,\n         4.9005e-01, 1.2787e-01, 8.7196e-01, 5.9701e-01, 7.6338e-01, 8.7120e-01,\n         1.2046e-01, 2.5992e-01],\n        [1.8575e-02, 2.4272e-01, 7.0693e-01, 5.9898e-01, 5.5666e-01, 8.4494e-01,\n         2.2350e-01, 8.2209e-02, 2.8182e-01, 3.1216e-01, 5.2575e-01, 7.3177e-01,\n         5.2155e-01, 7.6004e-01],\n        [6.4869e-01, 7.3665e-02, 4.1513e-01, 7.1939e-02, 8.5071e-01, 7.3800e-01,\n         2.8910e-02, 6.3326e-01, 3.9960e-01, 8.6525e-01, 9.0732e-01, 9.7947e-01,\n         2.6823e-01, 6.2233e-01],\n        [2.9093e-01, 8.8387e-01, 4.3192e-01, 8.8832e-01, 3.6456e-01, 8.0451e-01,\n         6.6659e-01, 3.2073e-01, 5.3365e-01, 4.5812e-02, 2.8010e-01, 9.8940e-01,\n         9.1895e-01, 1.4928e-01],\n        [8.3005e-01, 8.5257e-01, 8.7868e-02, 4.6754e-02, 9.3454e-01, 3.6240e-01,\n         3.1366e-01, 9.1193e-01, 7.5754e-01, 8.2936e-01, 5.2647e-01, 9.6330e-01,\n         1.7042e-01, 2.1149e-01],\n        [6.5112e-02, 1.4399e-01, 1.5982e-01, 7.8887e-01, 3.1266e-01, 2.5991e-01,\n         6.4966e-01, 3.4790e-01, 3.3348e-02, 4.7871e-01, 1.5503e-01, 9.1153e-01,\n         2.7834e-01, 5.5079e-02],\n        [6.9062e-01, 8.6990e-01, 5.0508e-01, 5.5609e-01, 8.0904e-01, 2.7192e-01,\n         5.9470e-01, 2.0622e-01, 5.1040e-02, 1.5235e-01, 6.2428e-01, 6.6564e-02,\n         6.9704e-01, 5.3637e-01],\n        [9.1167e-01, 7.6664e-01, 8.8163e-01, 6.2842e-01, 3.2941e-01, 7.8978e-01,\n         4.9387e-01, 6.6086e-01, 4.7024e-01, 8.6521e-01, 4.7883e-01, 8.7207e-01,\n         8.4152e-01, 7.1684e-02],\n        [4.3376e-02, 6.2497e-01, 9.8273e-01, 5.9929e-01, 2.4299e-02, 4.3338e-01,\n         7.9257e-01, 8.9716e-01, 3.9752e-01, 5.9334e-01, 6.3370e-02, 7.0500e-01,\n         2.7762e-01, 8.6269e-01]]), 'u_ffs': tensor([[0.5776, 0.7609, 0.7650, 0.2031, 0.9350, 0.6849, 0.8095],\n        [0.9768, 0.6042, 0.7627, 0.8665, 0.1029, 0.0712, 0.3938],\n        [0.9388, 0.0083, 0.0959, 0.6892, 0.4503, 0.3724, 0.0087],\n        [0.8975, 0.6893, 0.2571, 0.9017, 0.8521, 0.3189, 0.0998],\n        [0.6485, 0.5323, 0.5664, 0.1324, 0.3267, 0.7552, 0.1057],\n        [0.5291, 0.0116, 0.9794, 0.4302, 0.4861, 0.9438, 0.6101],\n        [0.7153, 0.1723, 0.3444, 0.8510, 0.3908, 0.8925, 0.4453],\n        [0.5617, 0.6431, 0.4277, 0.1827, 0.2264, 0.2161, 0.4681],\n        [0.9353, 0.8171, 0.1444, 0.2298, 0.3439, 0.6824, 0.6302],\n        [0.1293, 0.2739, 0.7104, 0.6442, 0.1243, 0.7603, 0.6804],\n        [0.0329, 0.6370, 0.1004, 0.6299, 0.2210, 0.8797, 0.2459],\n        [0.0859, 0.7234, 0.2766, 0.1784, 0.4020, 0.6366, 0.4370],\n        [0.8429, 0.3298, 0.7466, 0.2624, 0.3878, 0.4852, 0.1332],\n        [0.3199, 0.4775, 0.9770, 0.6906, 0.2369, 0.5226, 0.9525],\n        [0.5962, 0.0641, 0.1032, 0.7012, 0.5455, 0.0395, 0.3832],\n        [0.2504, 0.7077, 0.8117, 0.6037, 0.9558, 0.4445, 0.4815],\n        [0.6305, 0.2391, 0.1166, 0.8806, 0.7748, 0.0706, 0.5760],\n        [0.1544, 0.6470, 0.8889, 0.0307, 0.9972, 0.1639, 0.6097],\n        [0.0471, 0.0362, 0.2999, 0.2860, 0.5596, 0.6966, 0.5513],\n        [0.9751, 0.6697, 0.2922, 0.3018, 0.5811, 0.4646, 0.2299],\n        [0.0269, 0.5094, 0.3423, 0.2678, 0.4730, 0.5047, 0.8943],\n        [0.0629, 0.5937, 0.0558, 0.0099, 0.3656, 0.2954, 0.6826],\n        [0.0277, 0.2872, 0.0636, 0.9405, 0.7425, 0.3687, 0.6553],\n        [0.5561, 0.0610, 0.2012, 0.1231, 0.4737, 0.8245, 0.7477],\n        [0.9831, 0.1840, 0.0982, 0.2279, 0.2820, 0.3606, 0.5422],\n        [0.9311, 0.2617, 0.2636, 0.8362, 0.2422, 0.9944, 0.3339],\n        [0.7111, 0.7451, 0.0434, 0.9270, 0.6999, 0.8772, 0.9843],\n        [0.8962, 0.2768, 0.2200, 0.3981, 0.1536, 0.4491, 0.8612],\n        [0.2283, 0.3586, 0.6905, 0.6638, 0.3300, 0.9523, 0.5834],\n        [0.3859, 0.7155, 0.4904, 0.4051, 0.4805, 0.6082, 0.0851],\n        [0.0641, 0.0756, 0.0658, 0.9514, 0.6062, 0.0978, 0.1408],\n        [0.5563, 0.7682, 0.5383, 0.0500, 0.7375, 0.1721, 0.3335],\n        [0.3773, 0.9685, 0.1387, 0.1156, 0.1156, 0.1536, 0.7267],\n        [0.4529, 0.0465, 0.1008, 0.8608, 0.7793, 0.4822, 0.3942],\n        [0.9627, 0.2864, 0.6631, 0.1700, 0.2002, 0.5476, 0.1152],\n        [0.7224, 0.5294, 0.1133, 0.9248, 0.8041, 0.9838, 0.9982],\n        [0.1680, 0.6615, 0.5469, 0.1405, 0.7304, 0.5713, 0.7849],\n        [0.7027, 0.6449, 0.7286, 0.6884, 0.0690, 0.0715, 0.2263],\n        [0.0815, 0.3492, 0.6327, 0.0702, 0.2012, 0.7062, 0.6019],\n        [0.9271, 0.7076, 0.6779, 0.7436, 0.7192, 0.6303, 0.5596],\n        [0.3616, 0.4486, 0.9088, 0.8439, 0.4325, 0.3648, 0.2563],\n        [0.2929, 0.8122, 0.8388, 0.1567, 0.9923, 0.0892, 0.2408],\n        [0.8471, 0.6053, 0.3185, 0.6083, 0.1015, 0.6169, 0.5709],\n        [0.3831, 0.0241, 0.8011, 0.1284, 0.3071, 0.0149, 0.1548],\n        [0.6121, 0.8555, 0.6452, 0.8616, 0.7552, 0.3142, 0.3094],\n        [0.8248, 0.8931, 0.8625, 0.5918, 0.1158, 0.5504, 0.7794],\n        [0.6700, 0.2099, 0.1537, 0.8968, 0.5799, 0.8410, 0.9681],\n        [0.3229, 0.8170, 0.7971, 0.7999, 0.8923, 0.1120, 0.5634],\n        [0.3993, 0.1681, 0.3939, 0.5126, 0.7807, 0.7836, 0.6096],\n        [0.5930, 0.1453, 0.7987, 0.5207, 0.4527, 0.3992, 0.2538],\n        [0.4174, 0.1257, 0.1117, 0.3354, 0.2888, 0.7939, 0.2633],\n        [0.4021, 0.5595, 0.1673, 0.2782, 0.1471, 0.5000, 0.9685],\n        [0.6492, 0.0991, 0.1297, 0.4173, 0.7547, 0.5605, 0.9392],\n        [0.1313, 0.9626, 0.9126, 0.0275, 0.2696, 0.5440, 0.3045],\n        [0.5535, 0.7213, 0.9985, 0.4803, 0.1563, 0.8496, 0.0513],\n        [0.5643, 0.9991, 0.2839, 0.7844, 0.7261, 0.4175, 0.5579],\n        [0.4785, 0.8939, 0.2612, 0.9174, 0.3863, 0.1688, 0.5426],\n        [0.5010, 0.8332, 0.0424, 0.3017, 0.1105, 0.4392, 0.4988],\n        [0.4272, 0.1429, 0.7635, 0.4129, 0.5710, 0.2814, 0.2087],\n        [0.4221, 0.0162, 0.0800, 0.5544, 0.9734, 0.2048, 0.9735]])}",
                "True",
                "None"
            ]
        ],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "26282450f9eabbf8e77481a71678e1a588d57e91ccd8560debac18a87c0ef603",
        "warmup_time": -1
    },
    "version": 2
}