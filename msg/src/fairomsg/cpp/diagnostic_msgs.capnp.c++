// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: diagnostic_msgs.capnp

#include "diagnostic_msgs.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<54> b_adaa5408704b2852 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     82,  40,  75, 112,   8,  84, 170, 173,
     26,   0,   0,   0,   1,   0,   0,   0,
    136, 226, 197, 141, 100, 237, 154, 195,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 100, 105,  97, 103,
    110, 111, 115, 116, 105,  99,  95, 109,
    115, 103, 115,  46,  99,  97, 112, 110,
    112,  58,  68, 105,  97, 103, 110, 111,
    115, 116, 105,  99,  65, 114, 114,  97,
    121,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     55,  41, 146,   3, 207, 139, 154, 207,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116,  97, 116, 117, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    211,  86,  20, 239,  14, 189, 126, 148,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_adaa5408704b2852 = b_adaa5408704b2852.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_adaa5408704b2852[] = {
  &s_947ebd0eef1456d3,
  &s_cf9a8bcf03922937,
};
static const uint16_t m_adaa5408704b2852[] = {0, 1};
static const uint16_t i_adaa5408704b2852[] = {0, 1};
const ::capnp::_::RawSchema s_adaa5408704b2852 = {
  0xadaa5408704b2852, b_adaa5408704b2852.words, 54, d_adaa5408704b2852, m_adaa5408704b2852,
  2, 2, i_adaa5408704b2852, nullptr, nullptr, { &s_adaa5408704b2852, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<112> b_947ebd0eef1456d3 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    211,  86,  20, 239,  14, 189, 126, 148,
     26,   0,   0,   0,   1,   0,   1,   0,
    136, 226, 197, 141, 100, 237, 154, 195,
      4,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
     41,   0,   0,   0,  71,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 100, 105,  97, 103,
    110, 111, 115, 116, 105,  99,  95, 109,
    115, 103, 115,  46,  99,  97, 112, 110,
    112,  58,  68, 105,  97, 103, 110, 111,
    115, 116, 105,  99,  83, 116,  97, 116,
    117, 115,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   1,   0,   1,   0,
     86,  63, 125, 140, 234,  72, 150, 209,
     25,   0,   0,   0,  34,   0,   0,   0,
    226, 184,  28, 214, 193,  74, 177, 163,
     21,   0,   0,   0,  50,   0,   0,   0,
     87, 122, 242,  90, 103, 138,  88, 237,
     17,   0,   0,   0,  58,   0,   0,   0,
    134,  29,  77, 132,  21, 157,  28, 199,
     13,   0,   0,   0,  58,   0,   0,   0,
    107,  79, 107,   0,   0,   0,   0,   0,
    107,  87,  97, 114, 110,   0,   0,   0,
    107,  69, 114, 114, 111, 114,   0,   0,
    107,  83, 116,  97, 108, 101,   0,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    145,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    140,   0,   0,   0,   3,   0,   1,   0,
    168,   0,   0,   0,   2,   0,   1,   0,
    108, 101, 118, 101, 108,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 115, 115,  97, 103, 101,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,  97, 114, 100, 119,  97, 114, 101,
     73, 100,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    160,  49,  33,   3,  43,  39,  39, 215,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_947ebd0eef1456d3 = b_947ebd0eef1456d3.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_947ebd0eef1456d3[] = {
  &s_d727272b032131a0,
};
static const uint16_t m_947ebd0eef1456d3[] = {3, 0, 2, 1, 4};
static const uint16_t i_947ebd0eef1456d3[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_947ebd0eef1456d3 = {
  0x947ebd0eef1456d3, b_947ebd0eef1456d3.words, 112, d_947ebd0eef1456d3, m_947ebd0eef1456d3,
  1, 5, i_947ebd0eef1456d3, nullptr, nullptr, { &s_947ebd0eef1456d3, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<26> b_d19648ea8c7d3f56 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     86,  63, 125, 140, 234,  72, 150, 209,
     43,   0,   0,   0,   4,   0,   0,   0,
    211,  86,  20, 239,  14, 189, 126, 148,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 100, 105,  97, 103,
    110, 111, 115, 116, 105,  99,  95, 109,
    115, 103, 115,  46,  99,  97, 112, 110,
    112,  58,  68, 105,  97, 103, 110, 111,
    115, 116, 105,  99,  83, 116,  97, 116,
    117, 115,  46, 107,  79, 107,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d19648ea8c7d3f56 = b_d19648ea8c7d3f56.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_d19648ea8c7d3f56 = {
  0xd19648ea8c7d3f56, b_d19648ea8c7d3f56.words, 26, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_d19648ea8c7d3f56, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<27> b_a3b14ac1d61cb8e2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    226, 184,  28, 214, 193,  74, 177, 163,
     43,   0,   0,   0,   4,   0,   0,   0,
    211,  86,  20, 239,  14, 189, 126, 148,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 138,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 100, 105,  97, 103,
    110, 111, 115, 116, 105,  99,  95, 109,
    115, 103, 115,  46,  99,  97, 112, 110,
    112,  58,  68, 105,  97, 103, 110, 111,
    115, 116, 105,  99,  83, 116,  97, 116,
    117, 115,  46, 107,  87,  97, 114, 110,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a3b14ac1d61cb8e2 = b_a3b14ac1d61cb8e2.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_a3b14ac1d61cb8e2 = {
  0xa3b14ac1d61cb8e2, b_a3b14ac1d61cb8e2.words, 27, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_a3b14ac1d61cb8e2, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<27> b_ed588a675af27a57 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     87, 122, 242,  90, 103, 138,  88, 237,
     43,   0,   0,   0,   4,   0,   0,   0,
    211,  86,  20, 239,  14, 189, 126, 148,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 100, 105,  97, 103,
    110, 111, 115, 116, 105,  99,  95, 109,
    115, 103, 115,  46,  99,  97, 112, 110,
    112,  58,  68, 105,  97, 103, 110, 111,
    115, 116, 105,  99,  83, 116,  97, 116,
    117, 115,  46, 107,  69, 114, 114, 111,
    114,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   2,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ed588a675af27a57 = b_ed588a675af27a57.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_ed588a675af27a57 = {
  0xed588a675af27a57, b_ed588a675af27a57.words, 27, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_ed588a675af27a57, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<27> b_c71c9d15844d1d86 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    134,  29,  77, 132,  21, 157,  28, 199,
     43,   0,   0,   0,   4,   0,   0,   0,
    211,  86,  20, 239,  14, 189, 126, 148,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 100, 105,  97, 103,
    110, 111, 115, 116, 105,  99,  95, 109,
    115, 103, 115,  46,  99,  97, 112, 110,
    112,  58,  68, 105,  97, 103, 110, 111,
    115, 116, 105,  99,  83, 116,  97, 116,
    117, 115,  46, 107,  83, 116,  97, 108,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   3,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c71c9d15844d1d86 = b_c71c9d15844d1d86.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_c71c9d15844d1d86 = {
  0xc71c9d15844d1d86, b_c71c9d15844d1d86.words, 27, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_c71c9d15844d1d86, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_d727272b032131a0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    160,  49,  33,   3,  43,  39,  39, 215,
     26,   0,   0,   0,   1,   0,   0,   0,
    136, 226, 197, 141, 100, 237, 154, 195,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 100, 105,  97, 103,
    110, 111, 115, 116, 105,  99,  95, 109,
    115, 103, 115,  46,  99,  97, 112, 110,
    112,  58,  75, 101, 121,  86,  97, 108,
    117, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    107, 101, 121,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d727272b032131a0 = b_d727272b032131a0.words;
#if !CAPNP_LITE
static const uint16_t m_d727272b032131a0[] = {0, 1};
static const uint16_t i_d727272b032131a0[] = {0, 1};
const ::capnp::_::RawSchema s_d727272b032131a0 = {
  0xd727272b032131a0, b_d727272b032131a0.words, 49, nullptr, m_d727272b032131a0,
  0, 2, i_d727272b032131a0, nullptr, nullptr, { &s_d727272b032131a0, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace mrp {
namespace diagnostic {

// DiagnosticArray
constexpr uint16_t DiagnosticArray::_capnpPrivate::dataWordSize;
constexpr uint16_t DiagnosticArray::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind DiagnosticArray::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DiagnosticArray::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// DiagnosticStatus
constexpr uint16_t DiagnosticStatus::_capnpPrivate::dataWordSize;
constexpr uint16_t DiagnosticStatus::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind DiagnosticStatus::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DiagnosticStatus::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

#if !defined(_MSC_VER) || defined(__clang__)
constexpr  ::uint8_t DiagnosticStatus::K_OK;
#endif
#if !defined(_MSC_VER) || defined(__clang__)
constexpr  ::uint8_t DiagnosticStatus::K_WARN;
#endif
#if !defined(_MSC_VER) || defined(__clang__)
constexpr  ::uint8_t DiagnosticStatus::K_ERROR;
#endif
#if !defined(_MSC_VER) || defined(__clang__)
constexpr  ::uint8_t DiagnosticStatus::K_STALE;
#endif
// KeyValue
constexpr uint16_t KeyValue::_capnpPrivate::dataWordSize;
constexpr uint16_t KeyValue::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind KeyValue::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* KeyValue::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

