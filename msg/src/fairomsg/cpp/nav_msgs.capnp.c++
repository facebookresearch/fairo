// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: nav_msgs.capnp

#include "nav_msgs.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<66> b_a2ac7ce134b92ab5 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    181,  42, 185,  52, 225, 124, 172, 162,
     19,   0,   0,   0,   1,   0,   0,   0,
    240,  97,  33, 100, 214, 141, 162, 197,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 110,  97, 118,  95,
    109, 115, 103, 115,  46,  99,  97, 112,
    110, 112,  58,  71, 101, 116,  77,  97,
    112,  65,  99, 116, 105, 111, 110,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
     97,  99, 116, 105, 111, 110,  71, 111,
     97, 108,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    248,  92,   3, 168,   2,  17,  93, 144,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,  99, 116, 105, 111, 110,  82, 101,
    115, 117, 108, 116,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    201,  97,  66, 111, 181, 215, 117, 191,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,  99, 116, 105, 111, 110,  70, 101,
    101, 100,  98,  97,  99, 107,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    229, 219, 152, 181, 162, 106, 252, 191,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a2ac7ce134b92ab5 = b_a2ac7ce134b92ab5.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a2ac7ce134b92ab5[] = {
  &s_905d1102a8035cf8,
  &s_bf75d7b56f4261c9,
  &s_bffc6aa2b598dbe5,
};
static const uint16_t m_a2ac7ce134b92ab5[] = {2, 0, 1};
static const uint16_t i_a2ac7ce134b92ab5[] = {0, 1, 2};
const ::capnp::_::RawSchema s_a2ac7ce134b92ab5 = {
  0xa2ac7ce134b92ab5, b_a2ac7ce134b92ab5.words, 66, d_a2ac7ce134b92ab5, m_a2ac7ce134b92ab5,
  3, 3, i_a2ac7ce134b92ab5, nullptr, nullptr, { &s_a2ac7ce134b92ab5, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<65> b_bffc6aa2b598dbe5 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    229, 219, 152, 181, 162, 106, 252, 191,
     19,   0,   0,   0,   1,   0,   0,   0,
    240,  97,  33, 100, 214, 141, 162, 197,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 110,  97, 118,  95,
    109, 115, 103, 115,  46,  99,  97, 112,
    110, 112,  58,  71, 101, 116,  77,  97,
    112,  65,  99, 116, 105, 111, 110,  70,
    101, 101, 100,  98,  97,  99, 107,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     55,  41, 146,   3, 207, 139, 154, 207,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116,  97, 116, 117, 115,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     19, 206,  69, 248,  27, 124,  88, 191,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 101, 101, 100,  98,  97,  99, 107,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    178,  47, 213, 154, 130,  85, 204, 196,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bffc6aa2b598dbe5 = b_bffc6aa2b598dbe5.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_bffc6aa2b598dbe5[] = {
  &s_bf587c1bf845ce13,
  &s_c4cc55829ad52fb2,
  &s_cf9a8bcf03922937,
};
static const uint16_t m_bffc6aa2b598dbe5[] = {2, 0, 1};
static const uint16_t i_bffc6aa2b598dbe5[] = {0, 1, 2};
const ::capnp::_::RawSchema s_bffc6aa2b598dbe5 = {
  0xbffc6aa2b598dbe5, b_bffc6aa2b598dbe5.words, 65, d_bffc6aa2b598dbe5, m_bffc6aa2b598dbe5,
  3, 3, i_bffc6aa2b598dbe5, nullptr, nullptr, { &s_bffc6aa2b598dbe5, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<64> b_905d1102a8035cf8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    248,  92,   3, 168,   2,  17,  93, 144,
     19,   0,   0,   0,   1,   0,   0,   0,
    240,  97,  33, 100, 214, 141, 162, 197,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 110,  97, 118,  95,
    109, 115, 103, 115,  46,  99,  97, 112,
    110, 112,  58,  71, 101, 116,  77,  97,
    112,  65,  99, 116, 105, 111, 110,  71,
    111,  97, 108,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     55,  41, 146,   3, 207, 139, 154, 207,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 111,  97, 108,  73, 100,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    185, 173, 145,  33, 215, 117, 118, 207,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 111,  97, 108,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    217, 190,  74, 152, 228,  31, 122, 245,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_905d1102a8035cf8 = b_905d1102a8035cf8.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_905d1102a8035cf8[] = {
  &s_cf7675d72191adb9,
  &s_cf9a8bcf03922937,
  &s_f57a1fe4984abed9,
};
static const uint16_t m_905d1102a8035cf8[] = {2, 1, 0};
static const uint16_t i_905d1102a8035cf8[] = {0, 1, 2};
const ::capnp::_::RawSchema s_905d1102a8035cf8 = {
  0x905d1102a8035cf8, b_905d1102a8035cf8.words, 64, d_905d1102a8035cf8, m_905d1102a8035cf8,
  3, 3, i_905d1102a8035cf8, nullptr, nullptr, { &s_905d1102a8035cf8, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<64> b_bf75d7b56f4261c9 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    201,  97,  66, 111, 181, 215, 117, 191,
     19,   0,   0,   0,   1,   0,   0,   0,
    240,  97,  33, 100, 214, 141, 162, 197,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 110,  97, 118,  95,
    109, 115, 103, 115,  46,  99,  97, 112,
    110, 112,  58,  71, 101, 116,  77,  97,
    112,  65,  99, 116, 105, 111, 110,  82,
    101, 115, 117, 108, 116,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     55,  41, 146,   3, 207, 139, 154, 207,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116,  97, 116, 117, 115,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     19, 206,  69, 248,  27, 124,  88, 191,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    187, 131,  23, 148,  57, 153, 186, 192,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bf75d7b56f4261c9 = b_bf75d7b56f4261c9.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_bf75d7b56f4261c9[] = {
  &s_bf587c1bf845ce13,
  &s_c0ba9939941783bb,
  &s_cf9a8bcf03922937,
};
static const uint16_t m_bf75d7b56f4261c9[] = {0, 2, 1};
static const uint16_t i_bf75d7b56f4261c9[] = {0, 1, 2};
const ::capnp::_::RawSchema s_bf75d7b56f4261c9 = {
  0xbf75d7b56f4261c9, b_bf75d7b56f4261c9.words, 64, d_bf75d7b56f4261c9, m_bf75d7b56f4261c9,
  3, 3, i_bf75d7b56f4261c9, nullptr, nullptr, { &s_bf75d7b56f4261c9, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<18> b_c4cc55829ad52fb2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    178,  47, 213, 154, 130,  85, 204, 196,
     19,   0,   0,   0,   1,   0,   0,   0,
    240,  97,  33, 100, 214, 141, 162, 197,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 110,  97, 118,  95,
    109, 115, 103, 115,  46,  99,  97, 112,
    110, 112,  58,  71, 101, 116,  77,  97,
    112,  70, 101, 101, 100,  98,  97,  99,
    107,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_c4cc55829ad52fb2 = b_c4cc55829ad52fb2.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_c4cc55829ad52fb2 = {
  0xc4cc55829ad52fb2, b_c4cc55829ad52fb2.words, 18, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_c4cc55829ad52fb2, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_f57a1fe4984abed9 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    217, 190,  74, 152, 228,  31, 122, 245,
     19,   0,   0,   0,   1,   0,   0,   0,
    240,  97,  33, 100, 214, 141, 162, 197,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 110,  97, 118,  95,
    109, 115, 103, 115,  46,  99,  97, 112,
    110, 112,  58,  71, 101, 116,  77,  97,
    112,  71, 111,  97, 108,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_f57a1fe4984abed9 = b_f57a1fe4984abed9.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_f57a1fe4984abed9 = {
  0xf57a1fe4984abed9, b_f57a1fe4984abed9.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_f57a1fe4984abed9, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_c0ba9939941783bb = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    187, 131,  23, 148,  57, 153, 186, 192,
     19,   0,   0,   0,   1,   0,   0,   0,
    240,  97,  33, 100, 214, 141, 162, 197,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 110,  97, 118,  95,
    109, 115, 103, 115,  46,  99,  97, 112,
    110, 112,  58,  71, 101, 116,  77,  97,
    112,  82, 101, 115, 117, 108, 116,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    109,  97, 112,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    189, 227, 167, 114,  65,  61, 182, 189,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c0ba9939941783bb = b_c0ba9939941783bb.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c0ba9939941783bb[] = {
  &s_bdb63d4172a7e3bd,
};
static const uint16_t m_c0ba9939941783bb[] = {0};
static const uint16_t i_c0ba9939941783bb[] = {0};
const ::capnp::_::RawSchema s_c0ba9939941783bb = {
  0xc0ba9939941783bb, b_c0ba9939941783bb.words, 33, d_c0ba9939941783bb, m_c0ba9939941783bb,
  1, 1, i_c0ba9939941783bb, nullptr, nullptr, { &s_c0ba9939941783bb, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<84> b_c8b077ab0ba7f1ab = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    171, 241, 167,  11, 171, 119, 176, 200,
     19,   0,   0,   0,   1,   0,   1,   0,
    240,  97,  33, 100, 214, 141, 162, 197,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 110,  97, 118,  95,
    109, 115, 103, 115,  46,  99,  97, 112,
    110, 112,  58,  71, 114, 105, 100,  67,
    101, 108, 108, 115,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     55,  41, 146,   3, 207, 139, 154, 207,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 101, 108, 108,  87, 105, 100, 116,
    104,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 101, 108, 108,  72, 101, 105, 103,
    104, 116,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 101, 108, 108, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     68,  59,  77, 248, 154,  89, 171, 235,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c8b077ab0ba7f1ab = b_c8b077ab0ba7f1ab.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c8b077ab0ba7f1ab[] = {
  &s_cf9a8bcf03922937,
  &s_ebab599af84d3b44,
};
static const uint16_t m_c8b077ab0ba7f1ab[] = {2, 1, 3, 0};
static const uint16_t i_c8b077ab0ba7f1ab[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_c8b077ab0ba7f1ab = {
  0xc8b077ab0ba7f1ab, b_c8b077ab0ba7f1ab.words, 84, d_c8b077ab0ba7f1ab, m_c8b077ab0ba7f1ab,
  2, 4, i_c8b077ab0ba7f1ab, nullptr, nullptr, { &s_c8b077ab0ba7f1ab, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<95> b_e83746019d1a2700 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      0,  39,  26, 157,   1,  70,  55, 232,
     19,   0,   0,   0,   1,   0,   2,   0,
    240,  97,  33, 100, 214, 141, 162, 197,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 110,  97, 118,  95,
    109, 115, 103, 115,  46,  99,  97, 112,
    110, 112,  58,  77,  97, 112,  77, 101,
    116,  97,  68,  97, 116,  97,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    145,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    140,   0,   0,   0,   3,   0,   1,   0,
    152,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    149,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    144,   0,   0,   0,   3,   0,   1,   0,
    156,   0,   0,   0,   2,   0,   1,   0,
    109,  97, 112,  76, 111,  97, 100,  84,
    105, 109, 101,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     79,  12,  85, 207,   4,  92, 190, 235,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 115, 111, 108, 117, 116, 105,
    111, 110,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    119, 105, 100, 116, 104,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104, 101, 105, 103, 104, 116,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 114, 105, 103, 105, 110,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    168, 139, 201, 190, 163, 197, 246, 170,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e83746019d1a2700 = b_e83746019d1a2700.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e83746019d1a2700[] = {
  &s_aaf6c5a3bec98ba8,
  &s_ebbe5c04cf550c4f,
};
static const uint16_t m_e83746019d1a2700[] = {3, 0, 4, 1, 2};
static const uint16_t i_e83746019d1a2700[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_e83746019d1a2700 = {
  0xe83746019d1a2700, b_e83746019d1a2700.words, 95, d_e83746019d1a2700, m_e83746019d1a2700,
  2, 5, i_e83746019d1a2700, nullptr, nullptr, { &s_e83746019d1a2700, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<64> b_bdb63d4172a7e3bd = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    189, 227, 167, 114,  65,  61, 182, 189,
     19,   0,   0,   0,   1,   0,   0,   0,
    240,  97,  33, 100, 214, 141, 162, 197,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 110,  97, 118,  95,
    109, 115, 103, 115,  46,  99,  97, 112,
    110, 112,  58,  79,  99,  99, 117, 112,
     97, 110,  99, 121,  71, 114, 105, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     55,  41, 146,   3, 207, 139, 154, 207,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 102, 111,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,  39,  26, 157,   1,  70,  55, 232,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bdb63d4172a7e3bd = b_bdb63d4172a7e3bd.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_bdb63d4172a7e3bd[] = {
  &s_cf9a8bcf03922937,
  &s_e83746019d1a2700,
};
static const uint16_t m_bdb63d4172a7e3bd[] = {2, 0, 1};
static const uint16_t i_bdb63d4172a7e3bd[] = {0, 1, 2};
const ::capnp::_::RawSchema s_bdb63d4172a7e3bd = {
  0xbdb63d4172a7e3bd, b_bdb63d4172a7e3bd.words, 64, d_bdb63d4172a7e3bd, m_bdb63d4172a7e3bd,
  2, 3, i_bdb63d4172a7e3bd, nullptr, nullptr, { &s_bdb63d4172a7e3bd, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<79> b_c3c4315f099df0c3 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    195, 240, 157,   9,  95,  49, 196, 195,
     19,   0,   0,   0,   1,   0,   0,   0,
    240,  97,  33, 100, 214, 141, 162, 197,
      4,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 110,  97, 118,  95,
    109, 115, 103, 115,  46,  99,  97, 112,
    110, 112,  58,  79, 100, 111, 109, 101,
    116, 114, 121,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     55,  41, 146,   3, 207, 139, 154, 207,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104, 105, 108, 100,  70, 114,  97,
    109, 101,  73, 100,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 111, 115, 101,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     86,  49,  95, 216, 132,  41,  24, 250,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 119, 105, 115, 116,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     29,  39, 188, 111, 205,  51, 215, 243,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c3c4315f099df0c3 = b_c3c4315f099df0c3.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c3c4315f099df0c3[] = {
  &s_cf9a8bcf03922937,
  &s_f3d733cd6fbc271d,
  &s_fa182984d85f3156,
};
static const uint16_t m_c3c4315f099df0c3[] = {1, 0, 2, 3};
static const uint16_t i_c3c4315f099df0c3[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_c3c4315f099df0c3 = {
  0xc3c4315f099df0c3, b_c3c4315f099df0c3.words, 79, d_c3c4315f099df0c3, m_c3c4315f099df0c3,
  3, 4, i_c3c4315f099df0c3, nullptr, nullptr, { &s_c3c4315f099df0c3, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<51> b_f17f4bc183b07e30 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     48, 126, 176, 131, 193,  75, 127, 241,
     19,   0,   0,   0,   1,   0,   0,   0,
    240,  97,  33, 100, 214, 141, 162, 197,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 110,  97, 118,  95,
    109, 115, 103, 115,  46,  99,  97, 112,
    110, 112,  58,  80,  97, 116, 104,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     55,  41, 146,   3, 207, 139, 154, 207,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 111, 115, 101, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     94, 232,  95, 184,  78,  20, 127, 158,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f17f4bc183b07e30 = b_f17f4bc183b07e30.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f17f4bc183b07e30[] = {
  &s_9e7f144eb85fe85e,
  &s_cf9a8bcf03922937,
};
static const uint16_t m_f17f4bc183b07e30[] = {0, 1};
static const uint16_t i_f17f4bc183b07e30[] = {0, 1};
const ::capnp::_::RawSchema s_f17f4bc183b07e30 = {
  0xf17f4bc183b07e30, b_f17f4bc183b07e30.words, 51, d_f17f4bc183b07e30, m_f17f4bc183b07e30,
  2, 2, i_f17f4bc183b07e30, nullptr, nullptr, { &s_f17f4bc183b07e30, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace mrp {
namespace nav {

// GetMapAction
constexpr uint16_t GetMapAction::_capnpPrivate::dataWordSize;
constexpr uint16_t GetMapAction::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GetMapAction::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GetMapAction::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// GetMapActionFeedback
constexpr uint16_t GetMapActionFeedback::_capnpPrivate::dataWordSize;
constexpr uint16_t GetMapActionFeedback::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GetMapActionFeedback::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GetMapActionFeedback::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// GetMapActionGoal
constexpr uint16_t GetMapActionGoal::_capnpPrivate::dataWordSize;
constexpr uint16_t GetMapActionGoal::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GetMapActionGoal::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GetMapActionGoal::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// GetMapActionResult
constexpr uint16_t GetMapActionResult::_capnpPrivate::dataWordSize;
constexpr uint16_t GetMapActionResult::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GetMapActionResult::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GetMapActionResult::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// GetMapFeedback
constexpr uint16_t GetMapFeedback::_capnpPrivate::dataWordSize;
constexpr uint16_t GetMapFeedback::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GetMapFeedback::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GetMapFeedback::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// GetMapGoal
constexpr uint16_t GetMapGoal::_capnpPrivate::dataWordSize;
constexpr uint16_t GetMapGoal::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GetMapGoal::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GetMapGoal::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// GetMapResult
constexpr uint16_t GetMapResult::_capnpPrivate::dataWordSize;
constexpr uint16_t GetMapResult::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GetMapResult::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GetMapResult::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// GridCells
constexpr uint16_t GridCells::_capnpPrivate::dataWordSize;
constexpr uint16_t GridCells::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GridCells::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GridCells::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// MapMetaData
constexpr uint16_t MapMetaData::_capnpPrivate::dataWordSize;
constexpr uint16_t MapMetaData::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind MapMetaData::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MapMetaData::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// OccupancyGrid
constexpr uint16_t OccupancyGrid::_capnpPrivate::dataWordSize;
constexpr uint16_t OccupancyGrid::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind OccupancyGrid::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* OccupancyGrid::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Odometry
constexpr uint16_t Odometry::_capnpPrivate::dataWordSize;
constexpr uint16_t Odometry::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Odometry::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Odometry::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Path
constexpr uint16_t Path::_capnpPrivate::dataWordSize;
constexpr uint16_t Path::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Path::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Path::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

