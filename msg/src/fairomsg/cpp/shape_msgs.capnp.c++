// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: shape_msgs.capnp

#include "shape_msgs.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<58> b_c3765e3fa5ab25e0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    224,  37, 171, 165,  63,  94, 118, 195,
     21,   0,   0,   0,   1,   0,   0,   0,
    233, 219, 189, 155, 201, 175, 113, 207,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 115, 104,  97, 112,
    101,  95, 109, 115, 103, 115,  46,  99,
     97, 112, 110, 112,  58,  77, 101, 115,
    104,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
    116, 114, 105,  97, 110, 103, 108, 101,
    115,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    169,  24, 211, 171, 253, 178, 133, 234,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 101, 114, 116, 105,  99, 101, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     68,  59,  77, 248, 154,  89, 171, 235,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c3765e3fa5ab25e0 = b_c3765e3fa5ab25e0.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c3765e3fa5ab25e0[] = {
  &s_ea85b2fdabd318a9,
  &s_ebab599af84d3b44,
};
static const uint16_t m_c3765e3fa5ab25e0[] = {0, 1};
static const uint16_t i_c3765e3fa5ab25e0[] = {0, 1};
const ::capnp::_::RawSchema s_c3765e3fa5ab25e0 = {
  0xc3765e3fa5ab25e0, b_c3765e3fa5ab25e0.words, 58, d_c3765e3fa5ab25e0, m_c3765e3fa5ab25e0,
  2, 2, i_c3765e3fa5ab25e0, nullptr, nullptr, { &s_c3765e3fa5ab25e0, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<39> b_ea85b2fdabd318a9 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    169,  24, 211, 171, 253, 178, 133, 234,
     21,   0,   0,   0,   1,   0,   0,   0,
    233, 219, 189, 155, 201, 175, 113, 207,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 115, 104,  97, 112,
    101,  95, 109, 115, 103, 115,  46,  99,
     97, 112, 110, 112,  58,  77, 101, 115,
    104,  84, 114, 105,  97, 110, 103, 108,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
    118, 101, 114, 116, 101, 120,  73, 110,
    100, 105,  99, 101, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ea85b2fdabd318a9 = b_ea85b2fdabd318a9.words;
#if !CAPNP_LITE
static const uint16_t m_ea85b2fdabd318a9[] = {0};
static const uint16_t i_ea85b2fdabd318a9[] = {0};
const ::capnp::_::RawSchema s_ea85b2fdabd318a9 = {
  0xea85b2fdabd318a9, b_ea85b2fdabd318a9.words, 39, nullptr, m_ea85b2fdabd318a9,
  0, 1, i_ea85b2fdabd318a9, nullptr, nullptr, { &s_ea85b2fdabd318a9, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<37> b_b387280c4001ecbf = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    191, 236,   1,  64,  12,  40, 135, 179,
     21,   0,   0,   0,   1,   0,   0,   0,
    233, 219, 189, 155, 201, 175, 113, 207,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 115, 104,  97, 112,
    101,  95, 109, 115, 103, 115,  46,  99,
     97, 112, 110, 112,  58,  80, 108,  97,
    110, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
     99, 111, 101, 102,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b387280c4001ecbf = b_b387280c4001ecbf.words;
#if !CAPNP_LITE
static const uint16_t m_b387280c4001ecbf[] = {0};
static const uint16_t i_b387280c4001ecbf[] = {0};
const ::capnp::_::RawSchema s_b387280c4001ecbf = {
  0xb387280c4001ecbf, b_b387280c4001ecbf.words, 37, nullptr, m_b387280c4001ecbf,
  0, 1, i_b387280c4001ecbf, nullptr, nullptr, { &s_b387280c4001ecbf, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<96> b_d8943cb5e3be8b29 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     41, 139, 190, 227, 181,  60, 148, 216,
     21,   0,   0,   0,   1,   0,   1,   0,
    233, 219, 189, 155, 201, 175, 113, 207,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0, 199,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    201,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 115, 104,  97, 112,
    101,  95, 109, 115, 103, 115,  46,  99,
     97, 112, 110, 112,  58,  83, 111, 108,
    105, 100,  80, 114, 105, 109, 105, 116,
    105, 118, 101,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   1,   0,   1,   0,
    192,  64, 155, 184,  29, 112,   9, 205,
     89,   0,   0,   0,  42,   0,   0,   0,
      4, 186,   6, 245,   9, 153, 233, 203,
     85,   0,   0,   0,  66,   0,   0,   0,
    247,   4, 167,  59, 120, 134, 214, 203,
     81,   0,   0,   0,  82,   0,   0,   0,
     73,   7,  82, 174, 175, 224,  20, 205,
     81,   0,   0,   0,  50,   0,   0,   0,
    231, 194, 252, 204, 100,  86, 213, 244,
     77,   0,   0,   0,  50,   0,   0,   0,
    171, 102, 142, 101,  93,  76, 196, 217,
     73,   0,   0,   0,  50,   0,   0,   0,
    190, 199, 139, 144, 120,  78, 177, 223,
     69,   0,   0,   0,  50,   0,   0,   0,
     40,  90, 213, 166,  78, 204,  36, 129,
     65,   0,   0,   0, 114,   0,   0,   0,
    241, 226,  54, 117, 189, 173, 117, 155,
     65,   0,   0,   0, 130,   0,   0,   0,
     49,  45, 184, 212,  72, 163, 248, 192,
     65,   0,   0,   0, 130,   0,   0,   0,
    214, 101, 168,  78, 112,  49, 157, 224,
     65,   0,   0,   0,  98,   0,   0,   0,
     22, 189,  79, 122,   2,  84, 159, 247,
     65,   0,   0,   0,  98,   0,   0,   0,
    107,  66, 111, 120,   0,   0,   0,   0,
    107,  83, 112, 104, 101, 114, 101,   0,
    107,  67, 121, 108, 105, 110, 100, 101,
    114,   0,   0,   0,   0,   0,   0,   0,
    107,  67, 111, 110, 101,   0,   0,   0,
    107,  66, 111, 120,  88,   0,   0,   0,
    107,  66, 111, 120,  89,   0,   0,   0,
    107,  66, 111, 120,  90,   0,   0,   0,
    107,  83, 112, 104, 101, 114, 101,  82,
     97, 100, 105, 117, 115,   0,   0,   0,
    107,  67, 121, 108, 105, 110, 100, 101,
    114,  72, 101, 105, 103, 104, 116,   0,
    107,  67, 121, 108, 105, 110, 100, 101,
    114,  82,  97, 100, 105, 117, 115,   0,
    107,  67, 111, 110, 101,  72, 101, 105,
    103, 104, 116,   0,   0,   0,   0,   0,
    107,  67, 111, 110, 101,  82,  97, 100,
    105, 117, 115,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     72,   0,   0,   0,   2,   0,   1,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 109, 101, 110, 115, 105, 111,
    110, 115,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d8943cb5e3be8b29 = b_d8943cb5e3be8b29.words;
#if !CAPNP_LITE
static const uint16_t m_d8943cb5e3be8b29[] = {1, 0};
static const uint16_t i_d8943cb5e3be8b29[] = {0, 1};
const ::capnp::_::RawSchema s_d8943cb5e3be8b29 = {
  0xd8943cb5e3be8b29, b_d8943cb5e3be8b29.words, 96, nullptr, m_d8943cb5e3be8b29,
  0, 2, i_d8943cb5e3be8b29, nullptr, nullptr, { &s_d8943cb5e3be8b29, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<26> b_cd09701db89b40c0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    192,  64, 155, 184,  29, 112,   9, 205,
     36,   0,   0,   0,   4,   0,   0,   0,
     41, 139, 190, 227, 181,  60, 148, 216,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 115, 104,  97, 112,
    101,  95, 109, 115, 103, 115,  46,  99,
     97, 112, 110, 112,  58,  83, 111, 108,
    105, 100,  80, 114, 105, 109, 105, 116,
    105, 118, 101,  46, 107,  66, 111, 120,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cd09701db89b40c0 = b_cd09701db89b40c0.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_cd09701db89b40c0 = {
  0xcd09701db89b40c0, b_cd09701db89b40c0.words, 26, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_cd09701db89b40c0, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<26> b_cbe99909f506ba04 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      4, 186,   6, 245,   9, 153, 233, 203,
     36,   0,   0,   0,   4,   0,   0,   0,
     41, 139, 190, 227, 181,  60, 148, 216,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  98,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 115, 104,  97, 112,
    101,  95, 109, 115, 103, 115,  46,  99,
     97, 112, 110, 112,  58,  83, 111, 108,
    105, 100,  80, 114, 105, 109, 105, 116,
    105, 118, 101,  46, 107,  83, 112, 104,
    101, 114, 101,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   2,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cbe99909f506ba04 = b_cbe99909f506ba04.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_cbe99909f506ba04 = {
  0xcbe99909f506ba04, b_cbe99909f506ba04.words, 26, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_cbe99909f506ba04, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<26> b_cbd686783ba704f7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    247,   4, 167,  59, 120, 134, 214, 203,
     36,   0,   0,   0,   4,   0,   0,   0,
     41, 139, 190, 227, 181,  60, 148, 216,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 115, 104,  97, 112,
    101,  95, 109, 115, 103, 115,  46,  99,
     97, 112, 110, 112,  58,  83, 111, 108,
    105, 100,  80, 114, 105, 109, 105, 116,
    105, 118, 101,  46, 107,  67, 121, 108,
    105, 110, 100, 101, 114,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   3,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cbd686783ba704f7 = b_cbd686783ba704f7.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_cbd686783ba704f7 = {
  0xcbd686783ba704f7, b_cbd686783ba704f7.words, 26, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_cbd686783ba704f7, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<26> b_cd14e0afae520749 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     73,   7,  82, 174, 175, 224,  20, 205,
     36,   0,   0,   0,   4,   0,   0,   0,
     41, 139, 190, 227, 181,  60, 148, 216,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 115, 104,  97, 112,
    101,  95, 109, 115, 103, 115,  46,  99,
     97, 112, 110, 112,  58,  83, 111, 108,
    105, 100,  80, 114, 105, 109, 105, 116,
    105, 118, 101,  46, 107,  67, 111, 110,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   4,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cd14e0afae520749 = b_cd14e0afae520749.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_cd14e0afae520749 = {
  0xcd14e0afae520749, b_cd14e0afae520749.words, 26, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_cd14e0afae520749, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<26> b_f4d55664ccfcc2e7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    231, 194, 252, 204, 100,  86, 213, 244,
     36,   0,   0,   0,   4,   0,   0,   0,
     41, 139, 190, 227, 181,  60, 148, 216,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 115, 104,  97, 112,
    101,  95, 109, 115, 103, 115,  46,  99,
     97, 112, 110, 112,  58,  83, 111, 108,
    105, 100,  80, 114, 105, 109, 105, 116,
    105, 118, 101,  46, 107,  66, 111, 120,
     88,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f4d55664ccfcc2e7 = b_f4d55664ccfcc2e7.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_f4d55664ccfcc2e7 = {
  0xf4d55664ccfcc2e7, b_f4d55664ccfcc2e7.words, 26, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_f4d55664ccfcc2e7, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<26> b_d9c44c5d658e66ab = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    171, 102, 142, 101,  93,  76, 196, 217,
     36,   0,   0,   0,   4,   0,   0,   0,
     41, 139, 190, 227, 181,  60, 148, 216,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 115, 104,  97, 112,
    101,  95, 109, 115, 103, 115,  46,  99,
     97, 112, 110, 112,  58,  83, 111, 108,
    105, 100,  80, 114, 105, 109, 105, 116,
    105, 118, 101,  46, 107,  66, 111, 120,
     89,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d9c44c5d658e66ab = b_d9c44c5d658e66ab.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_d9c44c5d658e66ab = {
  0xd9c44c5d658e66ab, b_d9c44c5d658e66ab.words, 26, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_d9c44c5d658e66ab, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<26> b_dfb14e78908bc7be = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    190, 199, 139, 144, 120,  78, 177, 223,
     36,   0,   0,   0,   4,   0,   0,   0,
     41, 139, 190, 227, 181,  60, 148, 216,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 115, 104,  97, 112,
    101,  95, 109, 115, 103, 115,  46,  99,
     97, 112, 110, 112,  58,  83, 111, 108,
    105, 100,  80, 114, 105, 109, 105, 116,
    105, 118, 101,  46, 107,  66, 111, 120,
     90,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   2,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_dfb14e78908bc7be = b_dfb14e78908bc7be.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_dfb14e78908bc7be = {
  0xdfb14e78908bc7be, b_dfb14e78908bc7be.words, 26, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_dfb14e78908bc7be, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<27> b_8124cc4ea6d55a28 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     40,  90, 213, 166,  78, 204,  36, 129,
     36,   0,   0,   0,   4,   0,   0,   0,
     41, 139, 190, 227, 181,  60, 148, 216,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 115, 104,  97, 112,
    101,  95, 109, 115, 103, 115,  46,  99,
     97, 112, 110, 112,  58,  83, 111, 108,
    105, 100,  80, 114, 105, 109, 105, 116,
    105, 118, 101,  46, 107,  83, 112, 104,
    101, 114, 101,  82,  97, 100, 105, 117,
    115,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8124cc4ea6d55a28 = b_8124cc4ea6d55a28.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_8124cc4ea6d55a28 = {
  0x8124cc4ea6d55a28, b_8124cc4ea6d55a28.words, 27, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_8124cc4ea6d55a28, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<27> b_9b75adbd7536e2f1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    241, 226,  54, 117, 189, 173, 117, 155,
     36,   0,   0,   0,   4,   0,   0,   0,
     41, 139, 190, 227, 181,  60, 148, 216,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 115, 104,  97, 112,
    101,  95, 109, 115, 103, 115,  46,  99,
     97, 112, 110, 112,  58,  83, 111, 108,
    105, 100,  80, 114, 105, 109, 105, 116,
    105, 118, 101,  46, 107,  67, 121, 108,
    105, 110, 100, 101, 114,  72, 101, 105,
    103, 104, 116,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9b75adbd7536e2f1 = b_9b75adbd7536e2f1.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_9b75adbd7536e2f1 = {
  0x9b75adbd7536e2f1, b_9b75adbd7536e2f1.words, 27, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_9b75adbd7536e2f1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<27> b_c0f8a348d4b82d31 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     49,  45, 184, 212,  72, 163, 248, 192,
     36,   0,   0,   0,   4,   0,   0,   0,
     41, 139, 190, 227, 181,  60, 148, 216,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 115, 104,  97, 112,
    101,  95, 109, 115, 103, 115,  46,  99,
     97, 112, 110, 112,  58,  83, 111, 108,
    105, 100,  80, 114, 105, 109, 105, 116,
    105, 118, 101,  46, 107,  67, 121, 108,
    105, 110, 100, 101, 114,  82,  97, 100,
    105, 117, 115,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c0f8a348d4b82d31 = b_c0f8a348d4b82d31.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_c0f8a348d4b82d31 = {
  0xc0f8a348d4b82d31, b_c0f8a348d4b82d31.words, 27, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_c0f8a348d4b82d31, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<26> b_e09d31704ea865d6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    214, 101, 168,  78, 112,  49, 157, 224,
     36,   0,   0,   0,   4,   0,   0,   0,
     41, 139, 190, 227, 181,  60, 148, 216,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 115, 104,  97, 112,
    101,  95, 109, 115, 103, 115,  46,  99,
     97, 112, 110, 112,  58,  83, 111, 108,
    105, 100,  80, 114, 105, 109, 105, 116,
    105, 118, 101,  46, 107,  67, 111, 110,
    101,  72, 101, 105, 103, 104, 116,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e09d31704ea865d6 = b_e09d31704ea865d6.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_e09d31704ea865d6 = {
  0xe09d31704ea865d6, b_e09d31704ea865d6.words, 26, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_e09d31704ea865d6, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<26> b_f79f54027a4fbd16 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     22, 189,  79, 122,   2,  84, 159, 247,
     36,   0,   0,   0,   4,   0,   0,   0,
     41, 139, 190, 227, 181,  60, 148, 216,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 115, 104,  97, 112,
    101,  95, 109, 115, 103, 115,  46,  99,
     97, 112, 110, 112,  58,  83, 111, 108,
    105, 100,  80, 114, 105, 109, 105, 116,
    105, 118, 101,  46, 107,  67, 111, 110,
    101,  82,  97, 100, 105, 117, 115,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f79f54027a4fbd16 = b_f79f54027a4fbd16.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_f79f54027a4fbd16 = {
  0xf79f54027a4fbd16, b_f79f54027a4fbd16.words, 26, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_f79f54027a4fbd16, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace mrp {
namespace shape {

// Mesh
constexpr uint16_t Mesh::_capnpPrivate::dataWordSize;
constexpr uint16_t Mesh::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Mesh::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Mesh::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// MeshTriangle
constexpr uint16_t MeshTriangle::_capnpPrivate::dataWordSize;
constexpr uint16_t MeshTriangle::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind MeshTriangle::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MeshTriangle::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Plane
constexpr uint16_t Plane::_capnpPrivate::dataWordSize;
constexpr uint16_t Plane::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Plane::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Plane::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// SolidPrimitive
constexpr uint16_t SolidPrimitive::_capnpPrivate::dataWordSize;
constexpr uint16_t SolidPrimitive::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SolidPrimitive::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SolidPrimitive::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

#if !defined(_MSC_VER) || defined(__clang__)
constexpr  ::uint8_t SolidPrimitive::K_BOX;
#endif
#if !defined(_MSC_VER) || defined(__clang__)
constexpr  ::uint8_t SolidPrimitive::K_SPHERE;
#endif
#if !defined(_MSC_VER) || defined(__clang__)
constexpr  ::uint8_t SolidPrimitive::K_CYLINDER;
#endif
#if !defined(_MSC_VER) || defined(__clang__)
constexpr  ::uint8_t SolidPrimitive::K_CONE;
#endif
#if !defined(_MSC_VER) || defined(__clang__)
constexpr  ::uint8_t SolidPrimitive::K_BOX_X;
#endif
#if !defined(_MSC_VER) || defined(__clang__)
constexpr  ::uint8_t SolidPrimitive::K_BOX_Y;
#endif
#if !defined(_MSC_VER) || defined(__clang__)
constexpr  ::uint8_t SolidPrimitive::K_BOX_Z;
#endif
#if !defined(_MSC_VER) || defined(__clang__)
constexpr  ::uint8_t SolidPrimitive::K_SPHERE_RADIUS;
#endif
#if !defined(_MSC_VER) || defined(__clang__)
constexpr  ::uint8_t SolidPrimitive::K_CYLINDER_HEIGHT;
#endif
#if !defined(_MSC_VER) || defined(__clang__)
constexpr  ::uint8_t SolidPrimitive::K_CYLINDER_RADIUS;
#endif
#if !defined(_MSC_VER) || defined(__clang__)
constexpr  ::uint8_t SolidPrimitive::K_CONE_HEIGHT;
#endif
#if !defined(_MSC_VER) || defined(__clang__)
constexpr  ::uint8_t SolidPrimitive::K_CONE_RADIUS;
#endif

}  // namespace
}  // namespace

