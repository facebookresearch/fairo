// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: actionlib_msgs.capnp

#include "actionlib_msgs.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<48> b_cf7675d72191adb9 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    185, 173, 145,  33, 215, 117, 118, 207,
     25,   0,   0,   0,   1,   0,   0,   0,
     15,  95,  50, 123, 125, 197,  38, 137,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47,  97,  99, 116, 105,
    111, 110, 108, 105,  98,  95, 109, 115,
    103, 115,  46,  99,  97, 112, 110, 112,
     58,  71, 111,  97, 108,  73,  68,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    115, 116,  97, 109, 112,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     79,  12,  85, 207,   4,  92, 190, 235,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 100,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cf7675d72191adb9 = b_cf7675d72191adb9.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_cf7675d72191adb9[] = {
  &s_ebbe5c04cf550c4f,
};
static const uint16_t m_cf7675d72191adb9[] = {1, 0};
static const uint16_t i_cf7675d72191adb9[] = {0, 1};
const ::capnp::_::RawSchema s_cf7675d72191adb9 = {
  0xcf7675d72191adb9, b_cf7675d72191adb9.words, 48, d_cf7675d72191adb9, m_cf7675d72191adb9,
  1, 2, i_cf7675d72191adb9, nullptr, nullptr, { &s_cf7675d72191adb9, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<102> b_bf587c1bf845ce13 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     19, 206,  69, 248,  27, 124,  88, 191,
     25,   0,   0,   0,   1,   0,   1,   0,
     15,  95,  50, 123, 125, 197,  38, 137,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0, 167,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47,  97,  99, 116, 105,
    111, 110, 108, 105,  98,  95, 109, 115,
    103, 115,  46,  99,  97, 112, 110, 112,
     58,  71, 111,  97, 108,  83, 116,  97,
    116, 117, 115,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   1,   0,   1,   0,
     97, 133,  66,  28,  95, 227, 167, 168,
     73,   0,   0,   0,  74,   0,   0,   0,
     57, 166, 199,  91, 254,  77, 227, 232,
     73,   0,   0,   0,  66,   0,   0,   0,
     43, 233,  96, 141, 231, 166,  99, 230,
     69,   0,   0,   0,  90,   0,   0,   0,
    231, 160,   0, 111, 235, 127, 126, 148,
     69,   0,   0,   0,  90,   0,   0,   0,
    151, 115, 219,  93,  85, 182, 182, 174,
     69,   0,   0,   0,  74,   0,   0,   0,
     64, 205,  38, 196, 203,  89, 163, 191,
     69,   0,   0,   0,  82,   0,   0,   0,
    102,  56,  50,  97, 138,  16,  52, 182,
     69,   0,   0,   0,  98,   0,   0,   0,
     35, 115,   4,  94,  44,  93, 232, 155,
     69,   0,   0,   0,  90,   0,   0,   0,
     11, 140,  20,  80,  25, 227, 209, 255,
     69,   0,   0,   0,  82,   0,   0,   0,
     65,  21,  76,  64, 152, 144, 227, 239,
     69,   0,   0,   0,  50,   0,   0,   0,
    107,  80, 101, 110, 100, 105, 110, 103,
      0,   0,   0,   0,   0,   0,   0,   0,
    107,  65,  99, 116, 105, 118, 101,   0,
    107,  80, 114, 101, 101, 109, 112, 116,
    101, 100,   0,   0,   0,   0,   0,   0,
    107,  83, 117,  99,  99, 101, 101, 100,
    101, 100,   0,   0,   0,   0,   0,   0,
    107,  65,  98, 111, 114, 116, 101, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
    107,  82, 101, 106, 101,  99, 116, 101,
    100,   0,   0,   0,   0,   0,   0,   0,
    107,  80, 114, 101, 101, 109, 112, 116,
    105, 110, 103,   0,   0,   0,   0,   0,
    107,  82, 101,  99,  97, 108, 108, 105,
    110, 103,   0,   0,   0,   0,   0,   0,
    107,  82, 101,  99,  97, 108, 108, 101,
    100,   0,   0,   0,   0,   0,   0,   0,
    107,  76, 111, 115, 116,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    103, 111,  97, 108,  73, 100,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    185, 173, 145,  33, 215, 117, 118, 207,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116,  97, 116, 117, 115,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 120, 116,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bf587c1bf845ce13 = b_bf587c1bf845ce13.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_bf587c1bf845ce13[] = {
  &s_cf7675d72191adb9,
};
static const uint16_t m_bf587c1bf845ce13[] = {0, 1, 2};
static const uint16_t i_bf587c1bf845ce13[] = {0, 1, 2};
const ::capnp::_::RawSchema s_bf587c1bf845ce13 = {
  0xbf587c1bf845ce13, b_bf587c1bf845ce13.words, 102, d_bf587c1bf845ce13, m_bf587c1bf845ce13,
  1, 3, i_bf587c1bf845ce13, nullptr, nullptr, { &s_bf587c1bf845ce13, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<26> b_a8a7e35f1c428561 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     97, 133,  66,  28,  95, 227, 167, 168,
     36,   0,   0,   0,   4,   0,   0,   0,
     19, 206,  69, 248,  27, 124,  88, 191,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47,  97,  99, 116, 105,
    111, 110, 108, 105,  98,  95, 109, 115,
    103, 115,  46,  99,  97, 112, 110, 112,
     58,  71, 111,  97, 108,  83, 116,  97,
    116, 117, 115,  46, 107,  80, 101, 110,
    100, 105, 110, 103,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a8a7e35f1c428561 = b_a8a7e35f1c428561.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_a8a7e35f1c428561 = {
  0xa8a7e35f1c428561, b_a8a7e35f1c428561.words, 26, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_a8a7e35f1c428561, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<26> b_e8e34dfe5bc7a639 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     57, 166, 199,  91, 254,  77, 227, 232,
     36,   0,   0,   0,   4,   0,   0,   0,
     19, 206,  69, 248,  27, 124,  88, 191,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  98,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47,  97,  99, 116, 105,
    111, 110, 108, 105,  98,  95, 109, 115,
    103, 115,  46,  99,  97, 112, 110, 112,
     58,  71, 111,  97, 108,  83, 116,  97,
    116, 117, 115,  46, 107,  65,  99, 116,
    105, 118, 101,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e8e34dfe5bc7a639 = b_e8e34dfe5bc7a639.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_e8e34dfe5bc7a639 = {
  0xe8e34dfe5bc7a639, b_e8e34dfe5bc7a639.words, 26, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_e8e34dfe5bc7a639, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<26> b_e663a6e78d60e92b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     43, 233,  96, 141, 231, 166,  99, 230,
     36,   0,   0,   0,   4,   0,   0,   0,
     19, 206,  69, 248,  27, 124,  88, 191,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47,  97,  99, 116, 105,
    111, 110, 108, 105,  98,  95, 109, 115,
    103, 115,  46,  99,  97, 112, 110, 112,
     58,  71, 111,  97, 108,  83, 116,  97,
    116, 117, 115,  46, 107,  80, 114, 101,
    101, 109, 112, 116, 101, 100,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   2,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e663a6e78d60e92b = b_e663a6e78d60e92b.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_e663a6e78d60e92b = {
  0xe663a6e78d60e92b, b_e663a6e78d60e92b.words, 26, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_e663a6e78d60e92b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<26> b_947e7feb6f00a0e7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    231, 160,   0, 111, 235, 127, 126, 148,
     36,   0,   0,   0,   4,   0,   0,   0,
     19, 206,  69, 248,  27, 124,  88, 191,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47,  97,  99, 116, 105,
    111, 110, 108, 105,  98,  95, 109, 115,
    103, 115,  46,  99,  97, 112, 110, 112,
     58,  71, 111,  97, 108,  83, 116,  97,
    116, 117, 115,  46, 107,  83, 117,  99,
     99, 101, 101, 100, 101, 100,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   3,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_947e7feb6f00a0e7 = b_947e7feb6f00a0e7.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_947e7feb6f00a0e7 = {
  0x947e7feb6f00a0e7, b_947e7feb6f00a0e7.words, 26, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_947e7feb6f00a0e7, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<26> b_aeb6b6555ddb7397 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    151, 115, 219,  93,  85, 182, 182, 174,
     36,   0,   0,   0,   4,   0,   0,   0,
     19, 206,  69, 248,  27, 124,  88, 191,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47,  97,  99, 116, 105,
    111, 110, 108, 105,  98,  95, 109, 115,
    103, 115,  46,  99,  97, 112, 110, 112,
     58,  71, 111,  97, 108,  83, 116,  97,
    116, 117, 115,  46, 107,  65,  98, 111,
    114, 116, 101, 100,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   4,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_aeb6b6555ddb7397 = b_aeb6b6555ddb7397.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_aeb6b6555ddb7397 = {
  0xaeb6b6555ddb7397, b_aeb6b6555ddb7397.words, 26, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_aeb6b6555ddb7397, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<26> b_bfa359cbc426cd40 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     64, 205,  38, 196, 203,  89, 163, 191,
     36,   0,   0,   0,   4,   0,   0,   0,
     19, 206,  69, 248,  27, 124,  88, 191,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47,  97,  99, 116, 105,
    111, 110, 108, 105,  98,  95, 109, 115,
    103, 115,  46,  99,  97, 112, 110, 112,
     58,  71, 111,  97, 108,  83, 116,  97,
    116, 117, 115,  46, 107,  82, 101, 106,
    101,  99, 116, 101, 100,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   5,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bfa359cbc426cd40 = b_bfa359cbc426cd40.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_bfa359cbc426cd40 = {
  0xbfa359cbc426cd40, b_bfa359cbc426cd40.words, 26, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_bfa359cbc426cd40, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<26> b_b634108a61323866 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    102,  56,  50,  97, 138,  16,  52, 182,
     36,   0,   0,   0,   4,   0,   0,   0,
     19, 206,  69, 248,  27, 124,  88, 191,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47,  97,  99, 116, 105,
    111, 110, 108, 105,  98,  95, 109, 115,
    103, 115,  46,  99,  97, 112, 110, 112,
     58,  71, 111,  97, 108,  83, 116,  97,
    116, 117, 115,  46, 107,  80, 114, 101,
    101, 109, 112, 116, 105, 110, 103,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   6,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b634108a61323866 = b_b634108a61323866.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_b634108a61323866 = {
  0xb634108a61323866, b_b634108a61323866.words, 26, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_b634108a61323866, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<26> b_9be85d2c5e047323 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     35, 115,   4,  94,  44,  93, 232, 155,
     36,   0,   0,   0,   4,   0,   0,   0,
     19, 206,  69, 248,  27, 124,  88, 191,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47,  97,  99, 116, 105,
    111, 110, 108, 105,  98,  95, 109, 115,
    103, 115,  46,  99,  97, 112, 110, 112,
     58,  71, 111,  97, 108,  83, 116,  97,
    116, 117, 115,  46, 107,  82, 101,  99,
     97, 108, 108, 105, 110, 103,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9be85d2c5e047323 = b_9be85d2c5e047323.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_9be85d2c5e047323 = {
  0x9be85d2c5e047323, b_9be85d2c5e047323.words, 26, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_9be85d2c5e047323, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<26> b_ffd1e31950148c0b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     11, 140,  20,  80,  25, 227, 209, 255,
     36,   0,   0,   0,   4,   0,   0,   0,
     19, 206,  69, 248,  27, 124,  88, 191,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47,  97,  99, 116, 105,
    111, 110, 108, 105,  98,  95, 109, 115,
    103, 115,  46,  99,  97, 112, 110, 112,
     58,  71, 111,  97, 108,  83, 116,  97,
    116, 117, 115,  46, 107,  82, 101,  99,
     97, 108, 108, 101, 100,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   8,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ffd1e31950148c0b = b_ffd1e31950148c0b.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_ffd1e31950148c0b = {
  0xffd1e31950148c0b, b_ffd1e31950148c0b.words, 26, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_ffd1e31950148c0b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<26> b_efe39098404c1541 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     65,  21,  76,  64, 152, 144, 227, 239,
     36,   0,   0,   0,   4,   0,   0,   0,
     19, 206,  69, 248,  27, 124,  88, 191,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47,  97,  99, 116, 105,
    111, 110, 108, 105,  98,  95, 109, 115,
    103, 115,  46,  99,  97, 112, 110, 112,
     58,  71, 111,  97, 108,  83, 116,  97,
    116, 117, 115,  46, 107,  76, 111, 115,
    116,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   9,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_efe39098404c1541 = b_efe39098404c1541.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_efe39098404c1541 = {
  0xefe39098404c1541, b_efe39098404c1541.words, 26, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_efe39098404c1541, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<55> b_b688d53fabdc6ee9 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    233, 110, 220, 171,  63, 213, 136, 182,
     25,   0,   0,   0,   1,   0,   0,   0,
     15,  95,  50, 123, 125, 197,  38, 137,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47,  97,  99, 116, 105,
    111, 110, 108, 105,  98,  95, 109, 115,
    103, 115,  46,  99,  97, 112, 110, 112,
     58,  71, 111,  97, 108,  83, 116,  97,
    116, 117, 115,  65, 114, 114,  97, 121,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     72,   0,   0,   0,   2,   0,   1,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     55,  41, 146,   3, 207, 139, 154, 207,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116,  97, 116, 117, 115,  76, 105,
    115, 116,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     19, 206,  69, 248,  27, 124,  88, 191,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b688d53fabdc6ee9 = b_b688d53fabdc6ee9.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b688d53fabdc6ee9[] = {
  &s_bf587c1bf845ce13,
  &s_cf9a8bcf03922937,
};
static const uint16_t m_b688d53fabdc6ee9[] = {0, 1};
static const uint16_t i_b688d53fabdc6ee9[] = {0, 1};
const ::capnp::_::RawSchema s_b688d53fabdc6ee9 = {
  0xb688d53fabdc6ee9, b_b688d53fabdc6ee9.words, 55, d_b688d53fabdc6ee9, m_b688d53fabdc6ee9,
  2, 2, i_b688d53fabdc6ee9, nullptr, nullptr, { &s_b688d53fabdc6ee9, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace mrp {
namespace actionlib {

// GoalID
constexpr uint16_t GoalID::_capnpPrivate::dataWordSize;
constexpr uint16_t GoalID::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GoalID::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GoalID::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// GoalStatus
constexpr uint16_t GoalStatus::_capnpPrivate::dataWordSize;
constexpr uint16_t GoalStatus::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GoalStatus::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GoalStatus::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

#if !defined(_MSC_VER) || defined(__clang__)
constexpr  ::uint8_t GoalStatus::K_PENDING;
#endif
#if !defined(_MSC_VER) || defined(__clang__)
constexpr  ::uint8_t GoalStatus::K_ACTIVE;
#endif
#if !defined(_MSC_VER) || defined(__clang__)
constexpr  ::uint8_t GoalStatus::K_PREEMPTED;
#endif
#if !defined(_MSC_VER) || defined(__clang__)
constexpr  ::uint8_t GoalStatus::K_SUCCEEDED;
#endif
#if !defined(_MSC_VER) || defined(__clang__)
constexpr  ::uint8_t GoalStatus::K_ABORTED;
#endif
#if !defined(_MSC_VER) || defined(__clang__)
constexpr  ::uint8_t GoalStatus::K_REJECTED;
#endif
#if !defined(_MSC_VER) || defined(__clang__)
constexpr  ::uint8_t GoalStatus::K_PREEMPTING;
#endif
#if !defined(_MSC_VER) || defined(__clang__)
constexpr  ::uint8_t GoalStatus::K_RECALLING;
#endif
#if !defined(_MSC_VER) || defined(__clang__)
constexpr  ::uint8_t GoalStatus::K_RECALLED;
#endif
#if !defined(_MSC_VER) || defined(__clang__)
constexpr  ::uint8_t GoalStatus::K_LOST;
#endif
// GoalStatusArray
constexpr uint16_t GoalStatusArray::_capnpPrivate::dataWordSize;
constexpr uint16_t GoalStatusArray::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind GoalStatusArray::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* GoalStatusArray::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

