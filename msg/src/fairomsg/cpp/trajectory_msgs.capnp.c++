// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: trajectory_msgs.capnp

#include "trajectory_msgs.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<74> b_85bc0f442bf3d0c7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    199, 208, 243,  43,  68,  15, 188, 133,
     26,   0,   0,   0,   1,   0,   0,   0,
    255,  96, 167, 211, 100, 249, 203, 156,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 116, 114,  97, 106,
    101,  99, 116, 111, 114, 121,  95, 109,
    115, 103, 115,  46,  99,  97, 112, 110,
    112,  58,  74, 111, 105, 110, 116,  84,
    114,  97, 106, 101,  99, 116, 111, 114,
    121,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     55,  41, 146,   3, 207, 139, 154, 207,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    106, 111, 105, 110, 116,  78,  97, 109,
    101, 115,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 111, 105, 110, 116, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    155, 220,  38, 218,  36, 163,  95, 201,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_85bc0f442bf3d0c7 = b_85bc0f442bf3d0c7.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_85bc0f442bf3d0c7[] = {
  &s_c95fa324da26dc9b,
  &s_cf9a8bcf03922937,
};
static const uint16_t m_85bc0f442bf3d0c7[] = {0, 1, 2};
static const uint16_t i_85bc0f442bf3d0c7[] = {0, 1, 2};
const ::capnp::_::RawSchema s_85bc0f442bf3d0c7 = {
  0x85bc0f442bf3d0c7, b_85bc0f442bf3d0c7.words, 74, d_85bc0f442bf3d0c7, m_85bc0f442bf3d0c7,
  2, 3, i_85bc0f442bf3d0c7, nullptr, nullptr, { &s_85bc0f442bf3d0c7, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<115> b_c95fa324da26dc9b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    155, 220,  38, 218,  36, 163,  95, 201,
     26,   0,   0,   0,   1,   0,   0,   0,
    255,  96, 167, 211, 100, 249, 203, 156,
      5,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 116, 114,  97, 106,
    101,  99, 116, 111, 114, 121,  95, 109,
    115, 103, 115,  46,  99,  97, 112, 110,
    112,  58,  74, 111, 105, 110, 116,  84,
    114,  97, 106, 101,  99, 116, 111, 114,
    121,  80, 111, 105, 110, 116,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    152,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    149,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   0,   0,   0,   3,   0,   1,   0,
    176,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    173,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    172,   0,   0,   0,   3,   0,   1,   0,
    200,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    197,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    192,   0,   0,   0,   3,   0,   1,   0,
    220,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    217,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    216,   0,   0,   0,   3,   0,   1,   0,
    228,   0,   0,   0,   2,   0,   1,   0,
    112, 111, 115, 105, 116, 105, 111, 110,
    115,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 101, 108, 111,  99, 105, 116, 105,
    101, 115,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,  99,  99, 101, 108, 101, 114,  97,
    116, 105, 111, 110, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 102, 102, 111, 114, 116,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 105, 109, 101,  70, 114, 111, 109,
     83, 116,  97, 114, 116,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    255, 129,  45, 236, 206,  91, 186, 143,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c95fa324da26dc9b = b_c95fa324da26dc9b.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c95fa324da26dc9b[] = {
  &s_8fba5bceec2d81ff,
};
static const uint16_t m_c95fa324da26dc9b[] = {2, 3, 0, 4, 1};
static const uint16_t i_c95fa324da26dc9b[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_c95fa324da26dc9b = {
  0xc95fa324da26dc9b, b_c95fa324da26dc9b.words, 115, d_c95fa324da26dc9b, m_c95fa324da26dc9b,
  1, 5, i_c95fa324da26dc9b, nullptr, nullptr, { &s_c95fa324da26dc9b, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<75> b_f89d6f946cf774de = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    222, 116, 247, 108, 148, 111, 157, 248,
     26,   0,   0,   0,   1,   0,   0,   0,
    255,  96, 167, 211, 100, 249, 203, 156,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 116, 114,  97, 106,
    101,  99, 116, 111, 114, 121,  95, 109,
    115, 103, 115,  46,  99,  97, 112, 110,
    112,  58,  77, 117, 108, 116, 105,  68,
     79,  70,  74, 111, 105, 110, 116,  84,
    114,  97, 106, 101,  99, 116, 111, 114,
    121,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     55,  41, 146,   3, 207, 139, 154, 207,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    106, 111, 105, 110, 116,  78,  97, 109,
    101, 115,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 111, 105, 110, 116, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    213, 149,  65,  55,  85,  85, 242, 218,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f89d6f946cf774de = b_f89d6f946cf774de.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f89d6f946cf774de[] = {
  &s_cf9a8bcf03922937,
  &s_daf25555374195d5,
};
static const uint16_t m_f89d6f946cf774de[] = {0, 1, 2};
static const uint16_t i_f89d6f946cf774de[] = {0, 1, 2};
const ::capnp::_::RawSchema s_f89d6f946cf774de = {
  0xf89d6f946cf774de, b_f89d6f946cf774de.words, 75, d_f89d6f946cf774de, m_f89d6f946cf774de,
  2, 3, i_f89d6f946cf774de, nullptr, nullptr, { &s_f89d6f946cf774de, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<97> b_daf25555374195d5 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    213, 149,  65,  55,  85,  85, 242, 218,
     26,   0,   0,   0,   1,   0,   0,   0,
    255,  96, 167, 211, 100, 249, 203, 156,
      4,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   1,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  47, 116, 114,  97, 106,
    101,  99, 116, 111, 114, 121,  95, 109,
    115, 103, 115,  46,  99,  97, 112, 110,
    112,  58,  77, 117, 108, 116, 105,  68,
     79,  70,  74, 111, 105, 110, 116,  84,
    114,  97, 106, 101,  99, 116, 111, 114,
    121,  80, 111, 105, 110, 116,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    124,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    145,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    144,   0,   0,   0,   3,   0,   1,   0,
    172,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    169,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    168,   0,   0,   0,   3,   0,   1,   0,
    180,   0,   0,   0,   2,   0,   1,   0,
    116, 114,  97, 110, 115, 102, 111, 114,
    109, 115,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    188, 173,  16, 182,  50,  63,  34, 207,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 101, 108, 111,  99, 105, 116, 105,
    101, 115,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    197,   5, 214,  69,  57, 245, 239, 227,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,  99,  99, 101, 108, 101, 114,  97,
    116, 105, 111, 110, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    197,   5, 214,  69,  57, 245, 239, 227,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 105, 109, 101,  70, 114, 111, 109,
     83, 116,  97, 114, 116,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    255, 129,  45, 236, 206,  91, 186, 143,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_daf25555374195d5 = b_daf25555374195d5.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_daf25555374195d5[] = {
  &s_8fba5bceec2d81ff,
  &s_cf223f32b610adbc,
  &s_e3eff53945d605c5,
};
static const uint16_t m_daf25555374195d5[] = {2, 3, 0, 1};
static const uint16_t i_daf25555374195d5[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_daf25555374195d5 = {
  0xdaf25555374195d5, b_daf25555374195d5.words, 97, d_daf25555374195d5, m_daf25555374195d5,
  3, 4, i_daf25555374195d5, nullptr, nullptr, { &s_daf25555374195d5, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace mrp {
namespace trajectory {

// JointTrajectory
constexpr uint16_t JointTrajectory::_capnpPrivate::dataWordSize;
constexpr uint16_t JointTrajectory::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind JointTrajectory::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* JointTrajectory::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// JointTrajectoryPoint
constexpr uint16_t JointTrajectoryPoint::_capnpPrivate::dataWordSize;
constexpr uint16_t JointTrajectoryPoint::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind JointTrajectoryPoint::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* JointTrajectoryPoint::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// MultiDOFJointTrajectory
constexpr uint16_t MultiDOFJointTrajectory::_capnpPrivate::dataWordSize;
constexpr uint16_t MultiDOFJointTrajectory::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind MultiDOFJointTrajectory::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MultiDOFJointTrajectory::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// MultiDOFJointTrajectoryPoint
constexpr uint16_t MultiDOFJointTrajectoryPoint::_capnpPrivate::dataWordSize;
constexpr uint16_t MultiDOFJointTrajectoryPoint::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind MultiDOFJointTrajectoryPoint::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MultiDOFJointTrajectoryPoint::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

